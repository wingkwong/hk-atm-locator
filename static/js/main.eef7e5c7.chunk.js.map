{"version":3,"sources":["static/images/you_are_here.png","containers/AppNavbar/AppNavbar.js","containers/App/App.js","utils/geoUtils.js","actions/index.js","actions/types.js","components/ATMFilter/ATMSearch.js","constants/banks.js","constants/networks.js","constants/services.js","components/ATMFilter/ATMFilterDialog.js","components/ATMListing/ATMItem.js","components/Leaflet/ATMMarker.js","components/ATMDetail/ATMDetailContent.js","components/ATMDetail/ATMItemDetail.js","components/ATMListing/ATMItemDialog.js","components/ATMListing/ATMListing.js","utils/mtrOperatingHoursUtils.js","models/atm.js","utils/dataLoader.js","containers/Landing/LandingListView.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/pageReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","appBar","alignItems","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","theme","createMuiTheme","typography","useNextVariants","App","WrappedComponent","_Component","AppHOC","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MuiThemeProvider_default","AppNavbar_AppNavbar","location","style","marginTop","zIndex","Component","distanceBetweenTwoGeoPoints","lat1","lng1","lat2","lng2","dLat","Math","PI","dlng","sin","cos","atan2","sqrt","distanceConverter","distance","round","setSelectedLocation","lat","lng","idx","zoomLvl","length","undefined","dispatch","type","dispatchSetSelectedLocation","setCurrentLocation","dispatchSetCurrentLocation","toggleATMDetailDialog","open","dispatchToggleATMDetailDialog","toggleATMFilterDialog","dispatchToggleATMFilterDialog","ATMSearch","advancedFilterOnClick","_this","_this2","Paper_default","elevation","InputBase_default","input","placeholder","IconButton_default","iconButton","aria-label","Search_default","Divider_default","divider","Directions_default","onClick","Tune_default","connect","state","ownProps","padding","display","width","borderBottomRightRadius","borderBottomLeftRadius","marginLeft","flex","height","margin","withTheme","hsbc","en","zh","hangSeng","jetco","hangseng","networks","SERVICE_COIN_SORT","api_idx","tc","SERVICE_FOREIGN_CURRENCY","SERVICE_DISABLED_ACCESS","SERVICE_BILL_PAYMENT","SERVICE_CASH_WITHDRAWAL","SERVICE_CASH_DEPOSIT","SERVICE_CHEQUE_DEPOSIT","SERVICES","WEEK_DAYS","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ATMFilterDialog","call","handleClose","network","bank","expanded","event","toggleFilterOption","target","name","checked","_this$props","filters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","handleSelectChange","bind","inputProps","id","MenuItem_default","map","index","_this$props2","services","component","FormLabel_default","FormGroup_default","service","FormControlLabel_default","control","Switch_default","handleCheckboxChange","label","_this3","days","day","_this4","option","_this$props3","fullScreen","Dialog_default","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","renderNetworkSelect","renderBankSelect","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","DialogActions_default","Button_default","atm","page","filter_dialog_open","dispatchToggleFilterOption","dialogCustomizedWidth","withMobileDialog","ATMItem","alt","Bank","src","bankIcon","isOpenNow","Fragment","Chip_default","chip","isNaN","concat","_atm$ATMAddress","ATMAddress","LatitudeDescription","LongitudeDescription","ATMName","ListItem_default","button","atmListItemOnClick","renderBankIcon","ListItemText_default","primary","secondary","AddressLine","renderDistance","renderOpeningClosingTag","React","borderRadius","marginRight","ATMMarker","data","Popup","CardContent_default","popUpContent","title","gutterBottom","pos","BranchName","HotlineNumber","latitude","longitude","Marker","renderMarkerClusterGroup","&:last-child","paddingBottom","ATMDetailContent","handleDialogClose","saveMap","setState","isMapInit","renderDrawer","toolbar","Drawer_default","drawer","paper","drawerPaper","renderDrawerContent","renderNetworkIcon","renderServiceList","List_default","dense","denseList","renderOpeningHours","openingHours","oh","ohOpenTime","OpenTime","split","ohCloseTime","CloseTime","ohStr","OpenDayDescription","renderListItem","subheader","ListSubheader_default","subHeader","listRoot","_this$props$atm","ATMServices","_this$props$atm$ATMAd","CountryCode","TerritoryName","DistrictName","OpeningHours","inline","selectedLocation","currentLocation","zoom","selectedPosition","currentPosition","keys","selectedZoomLvl","icon","L","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","zoomLvlToUse","content","Map","mapContainer","center","maxZoom","ref","TileLayer","attribution","url","Leaflet_ATMMarker","top","flexShrink","paddingTop","mixins","backgroundColor","palette","background","networkAvatar","deepOrange","paddingLeft","paddingRight","ATMItemDetail","Close_default","ATMDetail_ATMDetailContent","Transition","Slide_default","assign","direction","ATMItemDialog","TransitionComponent","ATMDetail_ATMItemDetail","detail_dialog_open","ATMListing","handleDrawerToggle","mobileOpen","renderATMItems","allATMs","ATMListing_ATMItem","ATMListing_ATMItemDialog","CssBaseline_default","spacing","unit","getOperatingHoursByStation","station","isMatch","match","d","MTR_OPERATING_HOURS","filter","english_name","open_time","close_time","ATM","record","Network","CoinSortIndicator","ForeignCurrencyIndicator","DisabledAccessIndicator","BillPaymentIndicator","CashWithdrawalIndicator","CashDepositIndicator","ChequeDepositIndicator","RMBandForeignCurrencyATMIndicator","TalkATMIndicator","MTRStationOfficeIndicator","ChequeDepositMachineCutOffTime","copyFields","copyTo","copyFrom","_arr","_i","field","hasOwnProperty","isArray","serviceKey","isServiceIndicatorReturnTrue","dayOfWeek","moment","format","openingHour","find","openTime","closeTime","isBetween","HangSengATM","_ATM","banks","AutomatedTellerMachineOperatingHour","createGenericOpeningHours","operatingHoursFromMTRLookup","CashDepositMachineIndicator","ChequeDepositMachineIndicator","RMBATMwithoutForeignCurrencyIndicator","HsbcATM","_ATM2","weekday","loadAllData","toConsumableArray","atms","rawData","HANG_SENG_DATA","Brand","hangSengLatLngLUT","i","HANG_SENG_LATLNG_DATA","rec","address","latlng","push","loadHangSengData","HSBC_DATA","LandingListView","initATMData","detectCurrentLocation","_this$state","me","navigator","geolocation","getCurrentPosition","coords","sortATMData","err","timeout","setATMData","sortedAllATMs","sort","x","y","ATMFilter_ATMSearch","ATMFilter_ATMFilterDialog","components_ATMListing_ATMListing","atmData","dispatchSetATMData","Routes","Route","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","filterData","includes","isServiceAvaliable","atmDataReducer","action","objectSpread","raw_data","defineProperty","locationReducer","pageReducer","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.eef7e5c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    alignItems: 'center',\n  }\n};\n\nfunction AppNavbar(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Hong Kong ATM Locator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppNavbar);","import React, { Component } from 'react';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = (WrappedComponent) => {\n  class AppHOC extends Component {\n    render() {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <div>\n              <AppNavbar location={this.props.location}/>\n              <div style={{marginTop: '64px', zIndex: '1200'}}>\n                <WrappedComponent/>\n              </div>\n          </div>\n        </MuiThemeProvider>\n      );\n    }\n  }\n  return AppHOC;\n}\n\nexport default App;","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nconst distanceConverter = (distance) => {\n\tif(!distance) {\n\t\treturn null;\n\t}\n\treturn distance > 1 ? Math.round(distance) + 'km' : Math.round(distance * 1000) + 'm';\n}\n\nexport {\n    distanceBetweenTwoGeoPoints,\n\tdistanceConverter\n}","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION,\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_FILTER_OPTION,\n    TOGGLE_ATM_FILTER_DIALOG\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, idx, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, idx: idx, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nconst dispatchToggleATMDetailDialog = (open) => {\n    return {type: TOGGLE_ATM_DETAIL_DIALOG, open: open}\n}\n\nconst dispatchToggleFilterOption = (key, value) => {\n  return {type: TOGGLE_FILTER_OPTION, key, value}\n}\n\nconst dispatchToggleATMFilterDialog = (open) => {\n    return {type: TOGGLE_ATM_FILTER_DIALOG, open: open}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, idx, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, idx, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}\n\nexport const toggleATMDetailDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMDetailDialog(open))\n    }\n}\n\nexport const toggleFilterOption = (key, value) => {\n  return dispatch => {\n    dispatch(dispatchToggleFilterOption(key, value));\n  }\n}\n\nexport const toggleATMFilterDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMFilterDialog(open))\n    }\n}","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\nexport const TOGGLE_ATM_DETAIL_DIALOG = 'TOGGLE_ATM_DETAIL_DIALOG';\nexport const TOGGLE_FILTER_OPTION = 'TOGGLE_FILTER_OPTION';\nexport const TOGGLE_ATM_FILTER_DIALOG = 'TOGGLE_ATM_FILTER_DIALOG';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport FilterIcon from '@material-ui/icons/Tune';\nimport {\n  toggleATMFilterDialog\n} from '../../actions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    position: 'fixed',\n    alignItems: 'center',\n    width: '100%',\n    zIndex: 1200,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nclass ATMSearch extends Component{\n\n  advancedFilterOnClick = () => {\n    this.props.toggleATMFilterDialog(true);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Paper className={classes.root} elevation={1}>\n        <InputBase className={classes.input} placeholder=\"Search ...\" />\n        <IconButton className={classes.iconButton} aria-label=\"Search\">\n          <SearchIcon />\n        </IconButton>\n        <Divider className={classes.divider} />\n        <IconButton color=\"secondary\" className={classes.iconButton} aria-label=\"Directions\">\n          <DirectionsIcon />\n        </IconButton>\n        <Divider className={classes.divider} />\n        <IconButton color=\"secondary\" className={classes.iconButton} aria-label=\"advanced-filter\" onClick={() => this.advancedFilterOnClick()}>\n          <FilterIcon />\n        </IconButton>\n      </Paper>\n    );\n  }\n}\n\nATMSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      toggleATMFilterDialog: (open) => {\n          dispatch(toggleATMFilterDialog(open))\n      }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMSearch));","export const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n}\n\nexport const hangSeng = {\n    idx: 'hang_seng',\n    en: 'Hang Seng Bank',\n    zh: ''\n}\n\nexport const bochk = {\n    idx: 'bochk',\n    en: 'Bank of China(Hong Kong) Limited',\n    zh: ''\n}\n\nexport const bankcomm = {\n    idx: 'bankcomm',\n    en: 'Bank of Communications (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cncbinternational = {\n    idx: 'cncbinternational',\n    en: 'China CITIC Bank International Limited',\n    zh: ''\n}\n\nexport const asiaccb = {\n    idx: 'asiaccb',\n    en: 'China Construction Bank (Asia) Corporation Limited',\n    zh: ''\n}\n\nexport const cmbchina = {\n    idx: 'cmbchina',\n    en: 'China Merchants Bank Hong Kong Branch',\n    zh: ''\n}\n\nexport const chiyubank = {\n    idx: 'chiyubank',\n    en: 'Chiyu Banking Corporation Limited',\n    zh: ''\n}\n\nexport const chonghingbank = {\n    idx: 'chonghingbank',\n    en: 'Chong Hing Bank Limited',\n    zh: ''\n}\n\nexport const citibank = {\n    idx: 'citibank',\n    en: 'Citibank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cmbwinglungbank = {\n    idx: 'cmbwinglungbank',\n    en: 'CMB Wing Lung Bank Limited',\n    zh: ''\n}\n\nexport const dahsing = {\n    idx: 'dahsing',\n    en: 'Dah Sing Bank, Limited',\n    zh: ''\n}\n\nexport const dbs = {\n    idx: 'dbs',\n    en: 'DBS Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const fubonbank = {\n    idx: 'fubonbank',\n    en: 'Fubon Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const icbcasia = {\n    idx: 'icbcasia',\n    en: 'Industrial and Commercial Bank of China (Asia) Limited',\n    zh: ''\n}\n\nexport const ocbcwhhk = {\n    idx: 'ocbcwhhk',\n    en: 'OCBC Wing Hang Bank',\n    zh: ''\n}\n\nexport const publicbank = {\n    idx: 'publicbank',\n    en: 'Public Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const shacombank = {\n    idx: 'shacombank',\n    en: 'Shanghai Commercial Bank Limited',\n    zh: ''\n}\n\nexport const nanyang = {\n    idx: 'shacombank',\n    en: 'Nanyang Commercial Bank Limited',\n    zh: ''\n}\n\nexport const standardchartered = {\n    idx: 'standardchartered',\n    en: 'Standard Chartered Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const hkbea = {\n    idx: 'hkbea',\n    en: 'The Bank of East Asia',\n    zh: ''\n}\n\nexport const jetco = [\n    bochk,\n    bankcomm,\n    cncbinternational,\n    asiaccb,\n    cmbchina,\n    chiyubank,\n    chonghingbank,\n    citibank,\n    cmbwinglungbank,\n    dahsing,\n    dbs,\n    fubonbank,\n    icbcasia,\n    ocbcwhhk,\n    nanyang,\n    publicbank,\n    shacombank,\n    standardchartered,\n    hkbea\n]","export const jetco = {\n    idx: 'jetco',\n    en: 'Jetco',\n    zh: ''\n};\n\nexport const hangseng = {\n    idx: 'hang_seng',\n    en: 'Hang Seng',\n    zh: ''\n};\n\nexport const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n};\n\nexport const networks = [\n    jetco,\n    hangseng,\n    hsbc\n]","export const SERVICE_COIN_SORT = {\n  idx: 'coin_sort',\n  api_idx: 'CoinSortIndicator',\n  en: 'Coin Sort',\n  tc: ''\n};\n\nexport const SERVICE_FOREIGN_CURRENCY = {\n  idx: 'foreign_currency',\n  api_idx: 'ForeignCurrencyIndicator',\n  en: 'Foreign Currency',\n  tc: ''\n};\n\nexport const SERVICE_DISABLED_ACCESS = {\n  idx: 'disabled_access',\n  api_idx: 'DisabledAccessIndicator',\n  en: 'Disabled Access',\n  tc: ''\n};\n\nexport const SERVICE_BILL_PAYMENT = {\n  idx: 'bill_payment',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Bill Payment',\n  tc: ''\n};\n\nexport const SERVICE_CASH_WITHDRAWAL = {\n  idx: 'cash_withdrawal',\n  api_idx: 'CashWithdrawalIndicator',\n  en: 'Cash Withdrawal',\n  tc: ''\n};\n\nexport const SERVICE_CASH_DEPOSIT = {\n  idx: 'cash_deposit',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Cash Deposit',\n  tc: ''\n};\n\nexport const SERVICE_CHEQUE_DEPOSIT = {\n  idx: 'cheque_deposit',\n  api_idx: 'ChequeDepositIndicator',\n  en: 'Cheque Deposit',\n  tc: ''\n};\n\nexport const SERVICES = [\n  SERVICE_COIN_SORT,\n  SERVICE_FOREIGN_CURRENCY,\n  SERVICE_DISABLED_ACCESS,\n  SERVICE_BILL_PAYMENT,\n  SERVICE_CASH_WITHDRAWAL,\n  SERVICE_CASH_DEPOSIT,\n  SERVICE_CHEQUE_DEPOSIT\n];\n\nexport const WEEK_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport { jetco } from '../../constants/banks';\nimport { networks } from '../../constants/networks';\nimport { connect } from 'react-redux';\nimport { SERVICES, WEEK_DAYS } from '../../constants/services';\n\n\nimport {\n  toggleFilterOption,\n  toggleATMFilterDialog\n} from '../../actions'\n\n\nconst styles = {\n  dialogCustomizedWidth: {\n    width: '80%'\n  }\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all',\n        expanded: false\n    }\n  }\n\n  handleSelectChange(event) {\n      // this.setState({ [event.target.name]: event.target.value });\n      this.props.toggleFilterOption(event.target.name, event.target.value);\n  };\n\n  handleCheckboxChange(name) {\n      return function(event){\n          // this.setState({ [name]: event.target.checked });\n          this.props.toggleFilterOption(name, event.target.checked);\n      }\n  };\n\n  renderNetworkSelect() {\n    const { classes, filters: { network }} = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={network === undefined ? 'all' : network}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n              {\n                networks.map((network, index) => {\n                  return (\n                    <MenuItem value={network.idx} key={index}>\n                      {network.en}\n                    </MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    /*\n      TODO: the value s restricted based on Network\n    */\n    const { classes, filters: { bank } } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={bank === undefined ? 'all' : bank}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n            {\n              jetco.map((bank, index) => {\n                return (\n                  <MenuItem value={bank.idx} key={index}>\n                    {bank.en}\n                  </MenuItem>\n                );\n              })\n            }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const services = SERVICES;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             services.map((service, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[service]}\n                      onChange={this.handleCheckboxChange(service).bind(this)}\n                      value={service.en}\n                    />\n                  }\n                  label={service.en}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = WEEK_DAYS;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day).bind(this)}\n                      value={day}\n                    />\n                  }\n                  label={day}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <div></div>\n      /*\n        TODO:\n      */\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option).bind(this)}\n                    value={option}\n                  />\n                }\n                label={option}\n                key={index}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  handleClose = () => {\n    this.props.toggleATMFilterDialog(false);\n  }\n\n  render() {\n     const { classes, fullScreen } = this.props;\n    /*\n      TODO: Add Grid for responsive design\n    */\n    return (\n      <Dialog\n          fullScreen={fullScreen}\n          open={this.props.open || false}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n          fullWidth={true}\n          maxWidth = {'md'}\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Advaned Filter\"}</DialogTitle>\n          <DialogContent>\n            { this.renderNetworkSelect() }\n            <Divider variant=\"middle\" />\n            { this.renderBankSelect() }\n            <Divider variant=\"middle\" />\n            { this.renderServicesCheckbox() }\n            <Divider variant=\"middle\" />\n            { this.renderOpeningDayCheckbox() }\n            <Divider variant=\"middle\" />\n            { this.renderOpeningHourCheckbox() }\n            <Divider variant=\"middle\" />\n            { this.renderOpeningOrClosingCheckbox() }\n            <Divider variant=\"middle\" />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n  }\n}\n\nATMFilterDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst\nmapStateToProps = (state, ownProps) => {\n    return {\n      filters: state.atm.filters,\n      open: state.page.filter_dialog_open,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      toggleFilterOption: (key, value) => {\n          dispatch(toggleFilterOption(key, value));\n      },\n      toggleATMFilterDialog: (open) => {\n        dispatch(toggleATMFilterDialog(open))\n      } \n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withMobileDialog()(ATMFilterDialog)));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceConverter } from '../../utils/geoUtils';\n\nimport {\n    setSelectedLocation,\n    toggleATMDetailDialog\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0,\n        width: '100px',\n    },\n    bankIcon: {\n      width: '50px',\n      height: '50px',\n      marginRight: '20px',\n    }\n});\n\nclass ATMItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderBankIcon(atm) {\n      const { classes } = this.props;\n      return (\n        <img alt={atm.Bank} src={atm.Bank + \".png\"} className={classes.bankIcon}></img>\n      )\n    }\n\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distanceConverter(distance);\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n\n    atmListItemOnClick(atm, idx) {\n        const { ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n        if(LatitudeDescription && LongitudeDescription){\n            this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription, idx);\n        }\n\n        // toggle detail page\n        this.props.toggleATMDetailDialog(true);\n    }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMAddress, distance } = atm;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={ idx } onClick={() => this.atmListItemOnClick(atm, idx)}>\n                    { this.renderBankIcon(atm) }\n                    <div>\n                      <ListItemText\n                          primary={ ATMName }\n                          secondary={\n                              <React.Fragment>\n                                  { ATMAddress.AddressLine }\n                                  <br/>\n                                  { this.renderDistance(distance) }\n\n                              </React.Fragment>\n                          }\n                      />\n                      <div style={{display: 'flex'}}>\n                      { this.renderOpeningClosingTag(atm) }\n                      </div>\n\n\n                    </div>\n                </ListItem>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng, idx) => {\n            dispatch(setSelectedLocation(lat, lng, idx))\n        },\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarker extends React.Component {\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n\n        const latitude = atm.ATMAddress.LatitudeDescription;\n        const longitude = atm.ATMAddress.LongitudeDescription;\n        return (\n            <Marker\n                position= { [latitude, longitude] }\n                // onMouseOver= { (e) => {\n                //     e.target.openPopup();\n                // }}\n                // onMouseOut= { (e) => {\n                //     // e.target.closePopup();\n                // }}\n            >\n            {/* { this.renderPopUp(atm) } */}\n            </Marker>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarker.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarker));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport ATMMarker from '../../components/Leaflet/ATMMarker';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\nimport { distanceConverter } from '../../utils/geoUtils';\nimport { SERVICES } from '../../constants/services';\nimport {\n    toggleATMDetailDialog,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions';\n\nconst drawerWidth = 400\n\nconst styles = theme => ({\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: 'calc(100% - 400px)',\n        height: '100%',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        paddingTop: '64px'\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n     },\n     subHeader: {\n        height: '28px'\n     },\n     networkAvatar: {\n        width: '60px',\n        height: '60px',\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n     },\n     bankIcon: {\n      width: '50px',\n      height: '50px',\n    },\n    denseList: {\n        paddingTop: '4px',\n        paddingBottom: '4px',\n        paddingLeft: '0px',\n        paddingRight: '0px'\n    }\n});\n\nclass ATMDetailContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 16,\n            isMapInit: false\n        }\n    }\n\n    componentDidMount() {\n        const { selectedLocation, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length === 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n            this.setState({selectedLocation: selectedPosition})\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length === 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n            this.setState({currentLocation: currentPosition})\n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    renderDrawer = () => {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <div className={classes.toolbar} />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n                    { this.renderDrawerContent() }\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n\n    renderNetworkIcon = (bank) => {\n        const { classes } = this.props;\n        return (\n            <img alt={bank} src={bank + \".png\"} className={classes.bankIcon}></img>\n        );\n    }\n\n    // TODO: revise UI\n    renderServiceList = (services) => {\n        const { classes } = this.props;\n        // const { BillPaymentIndicator, CashDepositIndicator, CashWithdrawalIndicator, ChequeDepositIndicator, CoinSortIndicator, DisabledAccessIndicator, ForeignCurrencyIndicator } = services;\n        return (\n            <List \n                dense={true}\n            >\n                {\n                    SERVICES.map((service, idx) => {\n                        if(services[service.api_idx]) {\n                            return (\n                                <ListItem className={classes.denseList} key={idx}>\n                                    <ListItemText primary={service.en}></ListItemText>\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            (null)\n                        );\n                    })\n                }\n            </List>\n        );\n    }\n\n    // TODO: revise UI\n    renderOpeningHours = (openingHours) => {\n        const { classes } = this.props;\n        return (\n             <List \n                dense={true}\n            >\n                {\n                    openingHours.map((oh, idx) => {\n                        // TODO: FIXME: use moment to parse hmm to HHmm\n                       const ohOpenTime = (oh.OpenTime.split(':')[0] < 10 ? ( oh.OpenTime.split(':')[0][0] == '0' && oh.OpenTime.split(':')[0][1] != undefined ? '': '0' ) : '' ) + oh.OpenTime;\n                       const ohCloseTime = (oh.CloseTime.split(':')[0] < 10 ? ( oh.CloseTime.split(':')[0][0] == '0' && oh.CloseTime.split(':')[0][1] != undefined ? '' : '0' ) : '' ) + oh.CloseTime;\n                       const ohStr = `${oh.OpenDayDescription } : ${ohOpenTime} - ${ohCloseTime}`;\n                       return (\n                           <ListItem className={classes.denseList} key={idx}>\n                                <ListItemText primary={ohStr}></ListItemText>\n                            </ListItem>\n                       );\n                    })\n                }\n            </List>\n        )\n    }\n\n    renderListItem = (subheader, value) => {\n        const { classes } = this.props;\n\n        if(!subheader && !value) {\n            return (null);\n        }\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={classes.subHeader}>{subheader}</ListSubheader>}\n                className={classes.listRoot}\n                dense={true}\n                >\n                <ListItem>\n                    <ListItemText primary={value}/>\n                </ListItem>\n            </List>\n        );\n    }\n\n    renderDrawerContent = () => {\n        const { atm: { ATMName, ATMServices, ATMAddress: { CountryCode, TerritoryName, DistrictName, AddressLine, LatitudeDescription, LongitudeDescription }, Bank, HotlineNumber, distance, OpeningHours}, classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <List className={classes.listRoot}>\n                    <ListItem alignItems=\"flex-start\">\n                        { this.renderNetworkIcon(Bank) }\n                        <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                ({ LatitudeDescription },{ LongitudeDescription })\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                </List>\n\n                { this.renderListItem('District', CountryCode + ' > ' + TerritoryName + ' > ' + DistrictName) }\n                { this.renderListItem('Address', AddressLine) }\n                { this.renderListItem('Services', this.renderServiceList(ATMServices)) }\n                { this.renderListItem('Opening Hours', this.renderOpeningHours(OpeningHours)) }\n                { this.renderListItem('Hotline Number', HotlineNumber) }\n                { this.renderListItem('Distance', distanceConverter(distance)) }\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { atm, classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n       let zoomLvlToUse = selectedZoomLvl;\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                { this.renderDrawer() }\n                <div className={classes.content}>\n                    <Map\n                        className={classes.mapContainer}\n                        center={selectedLocation}\n                        zoom= {zoomLvlToUse}\n                        maxZoom={18}\n                        // dragging={false}\n                        ref={this.saveMap}>\n\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        {/* <ATMMarkerClusterGroup/> */}\n                        <Marker position={currentLocation} icon={icon}/>\n                        <ATMMarker atm={atm}/>\n                    </Map>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContent.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMDetailContent));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMDetailContent from './ATMDetailContent';\nimport {\n    toggleATMDetailDialog\n} from '../../actions';\n\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    root: {\n        display: 'flex',\n    }\n});\n\nclass ATMItemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           \n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    render() {\n        const { atm, classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar className={classes.appBar} position=\"fixed\" color=\"secondary\">\n                    <Toolbar>\n                        <IconButton  onClick={this.handleDialogClose} aria-label=\"Close\">\n                        <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            {atm.ATMName}\n                        </Typography>\n                    </Toolbar>\n                    </AppBar>\n                    <ATMDetailContent atm={atm} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItemDetail.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDetail));\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport ATMItemDetail from '../ATMDetail/ATMItemDetail';\n\nconst styles = {\n\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ATMItemDialog extends React.Component {\n\n  render() {\n    const { atm } = this.props;\n    \n    {/* TODO: Investigate idx = -1. Prolly due to zoomLevel */}\n    if(!this.props.selectedLocation || !atm || this.props.selectedLocation.idx < 0) {\n      return (null);\n    }\n    \n    const idx = this.props.selectedLocation.idx;\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open || false}\n        onClose={this.handleDialogClose}\n        TransitionComponent={Transition}\n      >\n        <ATMItemDetail atm={atm[idx]}/>\n      </Dialog>\n    );\n  }\n}\n\nATMItemDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  atm: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      atm: state.atm.data,\n      open: state.page.detail_dialog_open,\n      selectedLocation: state.location.selectedLocation\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDialog));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMItem from './ATMItem';\nimport ATMItemDialog from './ATMItemDialog';\n\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    paddingTop: '48px'\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative',\n    zIndex: '1000'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mobileOpen: false,\n    };\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderATMItems = () => {\n    const allATMs = this.props.atm;\n    if(allATMs === undefined) {\n      return <div>Loading</div>\n    }\n\n    if(allATMs.length > 0) {\n      return allATMs.map((atm, idx) => {\n        return (\n            <React.Fragment key={idx}>\n                <ATMItem atm={atm} idx={idx}/>\n                <Divider />\n            </React.Fragment>\n        );\n    });\n    } else {\n      return <div>No ATM data</div>\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const drawer = (\n      <React.Fragment>\n        <List>\n            {this.renderATMItems()}\n        </List>\n        <ATMItemDialog/>\n      </React.Fragment>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n        </nav>\n    </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","import MTR_OPERATING_HOURS from '../data/reference/mtr_operating_hours.json';\n\nconst getOperatingHoursByStation = (station) => {\n    // Expected Input: \"MTR Tin Shui Wai Station\"\n    const isMatch = station.match('(MTR (.*?) Station)');\n    if(isMatch != null) {\n        station = isMatch[2] \n    }\n    \n    var d = MTR_OPERATING_HOURS.filter( (data) => {\n        return data.english_name == station\n    })\n\n    if(d.length > 0) {\n        d = d[0];\n        return {\n            'open_time': d.open_time,\n            'close_time': d.close_time\n        };\n    } \n\n    return null;\n}\n\nexport {\n    getOperatingHoursByStation\n}","import { isArray } from \"util\";\nimport {\n  SERVICE_BILL_PAYMENT, SERVICE_CASH_DEPOSIT, SERVICE_CASH_WITHDRAWAL, SERVICE_CHEQUE_DEPOSIT, SERVICE_COIN_SORT,\n  SERVICE_DISABLED_ACCESS, SERVICE_FOREIGN_CURRENCY,\n  WEEK_DAYS\n} from '../constants/services';\nimport { getOperatingHoursByStation } from '../utils/mtrOperatingHoursUtils';\nimport * as banks from '../constants/banks';\nimport * as networks from '../constants/networks';\nimport * as moment from 'moment';\n\nclass ATM {\n  Bank = \"\";\n  Network = \"\";\n  ATMName = \"\";\n  HotlineNumber = \"\";\n  ATMAddress = {\n    CountryCode: \"HK\",\n    TerritoryName: \"\",\n    DistrictName: \"\",\n    AddressLine: [],\n    LatitudeDescription: 0,\n    LongitudeDescription: 0,\n  };\n  ATMServices = {\n    CoinSortIndicator: false,\n    ForeignCurrencyIndicator: false,\n    DisabledAccessIndicator: false,\n    BillPaymentIndicator: false,\n    CashWithdrawalIndicator: false,\n    CashDepositIndicator: false,\n    ChequeDepositIndicator: false,\n    RMBandForeignCurrencyATMIndicator: false,\n    TalkATMIndicator: false,\n    MTRStationOfficeIndicator: false,\n    ChequeDepositMachineCutOffTime: \"\",\n  };\n  OpeningHours = [];\n\n  constructor(record) {\n    copyFields(this, record);\n  }\n\n  isServiceAvaliable(serviceKey) {\n    if (serviceKey === SERVICE_COIN_SORT) {\n       return this.isServiceIndicatorReturnTrue('CoinSortIndicator');\n    } else if (serviceKey === SERVICE_FOREIGN_CURRENCY) {\n      return this.isServiceIndicatorReturnTrue('ForeignCurrencyIndicator');\n    } else if (serviceKey === SERVICE_DISABLED_ACCESS) {\n      return this.isServiceIndicatorReturnTrue('DisabledAccessIndicator');\n    } else if (serviceKey === SERVICE_BILL_PAYMENT) {\n      return this.isServiceIndicatorReturnTrue('BillPaymentIndicator');\n    } else if (serviceKey === SERVICE_CASH_WITHDRAWAL) {\n      return this.isServiceIndicatorReturnTrue('CashWithdrawalIndicator');\n    } else if (serviceKey === SERVICE_CASH_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('CashDepositIndicator');\n    } else if (serviceKey === SERVICE_CHEQUE_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('ChequeDepositIndicator');\n    }\n  }\n\n  isServiceIndicatorReturnTrue(field) {\n    return this.ATMServices\n      && this.ATMServices[field] !== undefined\n      && this.ATMServices[field] === true;\n  }\n\n  isOpenNow() {\n    const dayOfWeek = moment().format('dddd');\n    const openingHour = this.OpeningHours.find(oh => oh.OpenDayDescription === dayOfWeek);\n    if (!openingHour) {\n      return null;\n    }\n    const openTime = moment(openingHour.OpenTime, 'HH:mm');\n    const closeTime = moment(openingHour.CloseTime, 'HH:mm');\n    return moment().isBetween(openTime, closeTime);\n  }\n}\n\n\n\nfunction copyFields(copyTo, copyFrom) {\n  for (const field of Object.keys(copyTo)) {\n    if (copyFrom && copyFrom.hasOwnProperty(field)) {\n      if (typeof (copyFrom[field]) !== 'object' || isArray(copyFrom[field])) {\n        copyTo[field] = copyFrom[field];\n      } else {\n        copyFields(copyTo[field], copyFrom[field]);\n      }\n    }\n  }\n}\n\nexport class HangSengATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hangSeng.idx;\n    this.Network = networks.hangseng.idx;\n\n    if (record.ATMServices.AutomatedTellerMachineOperatingHour === '24-hours') {\n      this.OpeningHours = createGenericOpeningHours(\"00:00\", \"23:59\");\n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Around 06:00 - midnight 01:00 (Follows Station First/Last Trains Service Hours)') {\n      const operatingHoursFromMTRLookup = getOperatingHoursByStation(record.ATMName); \n      if(operatingHoursFromMTRLookup != null) {\n        const { open_time, close_time } = operatingHoursFromMTRLookup;\n        this.OpeningHours = createGenericOpeningHours(open_time, close_time);\n      } \n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Subject to Mall Opening Hours') {\n      // Just give a generic mall open/close time\n      this.OpeningHours = createGenericOpeningHours(\"10:00\", \"20:00\");\n    }\n\n    this.ATMServices.CashDepositIndicator = record.ATMServices.CashDepositMachineIndicator;\n    this.ATMServices.ChequeDepositIndicator = record.ATMServices.ChequeDepositMachineIndicator;\n    this.ATMServices.ForeignCurrencyIndicator =\n        record.ATMServices.RMBandForeignCurrencyATMIndicator\n        && !record.ATMServices.RMBATMwithoutForeignCurrencyIndicator;\n\n  }\n}\n\nexport class HsbcATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hsbc.idx;\n    this.Network = networks.hsbc.idx;\n  }\n}\n\n\nfunction createGenericOpeningHours(openTime, closeTime) {\n  return WEEK_DAYS.map(weekday => ({\n    OpenDayDescription: weekday,\n    OpenTime: openTime,\n    CloseTime: closeTime\n  }));\n}","import HANG_SENG_DATA from '../data/hang_seng.json';\nimport HANG_SENG_LATLNG_DATA from '../data/hang_seng_latlng.json';\nimport HSBC_DATA from '../data/hsbc.json';\n\nimport { HangSengATM, HsbcATM } from './../models/atm';\n\nexport const loadAllData = () => {\n\n  return [...loadHangSengData(), ...loadHSBCData()]\n\n\n}\n\nfunction loadHSBCData() {\n  const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n  return hsbcATMs.map(atm => new HsbcATM(atm));\n}\n\nfunction loadHangSengData() {\n  const atms = [];\n\n  const rawData = HANG_SENG_DATA.data[0].Brand[0].ATM;\n  let hangSengLatLngLUT = {};\n  for (let i = 0; i < HANG_SENG_LATLNG_DATA.length; i++) {\n    let rec = HANG_SENG_LATLNG_DATA[i];\n    hangSengLatLngLUT[rec.address] = { 'lat': rec.lat, 'lng': rec.lng };\n  }\n  for (let i = 0; i < rawData.length; i++) {\n    let rec = rawData[i];\n    let latlng = hangSengLatLngLUT[rec.ATMAddress.AddressLine[0]];\n    if (latlng) {\n      rec.ATMAddress.LatitudeDescription = latlng.lat;\n      rec.ATMAddress.LongitudeDescription = latlng.lng;\n    }\n\n    atms.push(new HangSengATM(rec));\n\n  }\n\n  return atms;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport ATMSearch from '../../components/ATMFilter/ATMSearch';\nimport ATMFilterDialog from '../../components/ATMFilter/ATMFilterDialog';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport { loadAllData } from '../../utils/dataLoader';\n\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n\n  };\n\nclass LandingListView extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const { currentLocation, selectedLocation } = this.state;\n        const me = this;\n\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n                me.props.setCurrentLocation(position.coords.latitude, position.coords.longitude);\n                me.props.setSelectedLocation(position.coords.latitude, position.coords.longitude);\n                me.sortATMData();\n             }, (err) => {\n                me.props.setCurrentLocation(currentLocation);\n                me.props.setSelectedLocation(selectedLocation);\n               // cannot get location, sort data anyway\n                me.sortATMData();\n             },{ timeout:100 });\n        } else {\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n\n        const allATMs = loadAllData();\n        this.props.setATMData(allATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n        if(atm) {\n            if(this.props.currentLocation !== undefined) {\n                location = this.props.currentLocation\n            }\n\n            const sortedAllATMs = [].concat(atm)\n             .sort( (x, y) => {\n                if(x.ATMAddress.LatitudeDescription != null && x.ATMAddress.LongitudeDescription != null &&\n                    y.ATMAddress.LatitudeDescription != null && y.ATMAddress.LongitudeDescription != null ) {\n                        const distanceX = distanceBetweenTwoGeoPoints(location.lat, location.lng, x.ATMAddress.LatitudeDescription, x.ATMAddress.LongitudeDescription);\n                        const distanceY = distanceBetweenTwoGeoPoints(location.lat, location.lng, y.ATMAddress.LatitudeDescription, y.ATMAddress.LongitudeDescription);\n                        return distanceX > distanceY ? 1 : -1;\n                    }\n                return -1;\n            })\n            .map( (atm) => {\n                atm.distance = distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription);\n                return atm;\n            });\n\n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ATMSearch/>\n                <ATMFilterDialog/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingListView));","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport App from './containers/App/App';\nimport LandingListView from './containers/Landing/LandingListView';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <div>\n                <Route path='/' component={App(LandingListView)}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA, TOGGLE_FILTER_OPTION\n} from '../actions/types';\nimport {\n  SERVICES, WEEK_DAYS\n} from '../constants/services';\n\nconst atmDataReducer = (state={\n  filters: {},\n  data: [],\n}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data, raw_data: action.data};\n        case TOGGLE_FILTER_OPTION:\n            const filters = {...state.filters, [action.key]: action.value };\n            return {...state, filters, data: filterData(state.raw_data, filters)};\n        default:\n            return state;\n    }\n}\n\n\nconst filterData = (atms, filter) => {\n  return atms.filter( atm => {\n    const shouldFilter = true;\n    for (const key of Object.keys(filter)) {\n      const value = filter[key];\n      if (\n        (SERVICES.includes(key) && value === true && !atm.isServiceAvaliable(key))\n        || (key === 'bank' && value !== 'all' && value !== atm.Bank)\n        || (key === 'network' && value !== 'all' && value !== atm.Network)\n        || (WEEK_DAYS.includes(key) && value === true && atm.OpeningHours.map( oh => oh.OpenDayDescription ).includes(key))\n        || (key === 'Opening' && value === true && atm.isOpenNow() === false) // DISCUSSION: this will show also the unknown atm as well\n        || (key === 'Closed' && value === true && atm.isOpenNow() === true)) {\n          return false\n        }\n    }\n    return shouldFilter;\n  })\n}\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng, idx: action.idx }, selectedZoomLvl : (action.zoomLvl === -1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import {\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_ATM_FILTER_DIALOG\n} from '../actions/types';\n\nconst pageReducer = (state={}, action) => {\n    switch (action.type) {\n        case TOGGLE_ATM_DETAIL_DIALOG:\n            return {...state, detail_dialog_open: action.open};\n        case TOGGLE_ATM_FILTER_DIALOG:\n            return {...state, filter_dialog_open: action.open};\n        default:\n            return state;\n\n    }\n}\n\nexport default pageReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer,\n    page: pageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}