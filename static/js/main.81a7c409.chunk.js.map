{"version":3,"sources":["static/images/you_are_here.png","actions/index.js","actions/types.js","containers/AppNavbar/AppNavbar.js","containers/App/App.js","utils/geoUtils.js","constants/banks.js","constants/networks.js","constants/services.js","components/ATMFilter/ATMFilterDialog.js","components/ATMListing/ATMItem.js","components/Leaflet/ATMMarker.js","utils/bankUtils.js","components/ATMDetail/ATMDetailContent.js","components/ATMDetail/ATMItemDetail.js","components/ATMListing/ATMItemDialog.js","components/Loader/Loader.js","components/ATMListing/ATMListing.js","models/atm.js","utils/dataLoader.js","containers/Landing/ATMListingContainer.js","components/Leaflet/ATMMarkerClusterGroup.js","containers/Landing/ATMMapContainer.js","containers/Landing/ATMLandingContainer.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/pageReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","setATMData","data","dispatch","type","dispatchSetATMData","setSelectedLocation","lat","lng","idx","zoomLvl","arguments","length","undefined","dispatchSetSelectedLocation","setCurrentLocation","dispatchSetCurrentLocation","toggleATMDetailDialog","open","dispatchToggleATMDetailDialog","toggleATMFilterDialog","dispatchToggleATMFilterDialog","AppNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","backToLandingPage","handleViewChange","toggleMapview","state","toggleMapView","setState","handleFilterOnclick","_this2","_this$props","classes","isDialogAppNavBar","react_default","a","createElement","className","root","AppBar_default","position","color","Toolbar_default","IconButton_default","backButton","aria-label","onClick","ArrowBack_default","Typography_default","dialogTitle","landingTitle","variant","Fragment","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","input","inputInput","filterIcon","Tune_default","grow","Map_default","React","Component","connect","ownProps","flag","dispatchToggleMapView","withStyles","theme","_dialogTitle","width","marginBottom","flexGrow","marginLeft","marginRight","display","defineProperty","breakpoints","up","margin","fontFamily","fontWeight","lineHeight","fontSize","borderRadius","shape","backgroundColor","palette","common","white","&:hover","fade","spacing","unit","height","pointerEvents","alignItems","justifyContent","cursor","right","top","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","withTheme","createMuiTheme","typography","useNextVariants","distanceBetweenTwoGeoPoints","lat1","lng1","lat2","lng2","dLat","Math","PI","dlng","sin","cos","atan2","sqrt","distanceConverter","distance","round","hsbc","en","zh","hangSeng","jetco","allBanks","concat","hangseng","networks","SERVICE_COIN_SORT","api_idx","tc","SERVICE_FOREIGN_CURRENCY","SERVICE_DISABLED_ACCESS","SERVICE_BILL_PAYMENT","SERVICE_CASH_WITHDRAWAL","SERVICE_CASH_DEPOSIT","SERVICE_CHEQUE_DEPOSIT","SERVICES","WEEK_DAYS","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","ATMFilterDialog","handleClose","network","bank","expanded","event","toggleFilterOption","target","name","value","checked","filters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","handleSelectChange","bind","inputProps","id","MenuItem_default","map","index","key","_this$props2","services","component","FormLabel_default","FormGroup_default","service","FormControlLabel_default","control","Checkbox_default","handleCheckboxChange","label","_this3","days","day","_this4","option","_this$props3","fullScreen","Dialog_default","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","Grid_default","container","item","xs","md","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","DialogActions_default","Button_default","atm","page","filter_dialog_open","dispatchToggleFilterOption","dialogCustomizedWidth","withMobileDialog","ATMItem","alt","Bank","src","bankIcon","isOpenNow","Chip_default","chip","isNaN","_atm$ATMAddress","ATMAddress","LatitudeDescription","LongitudeDescription","ATMName","ListItem_default","button","atmListItemOnClick","renderBankIcon","ListItemText_default","primary","secondary","AddressLine","renderDistance","renderOpeningClosingTag","ATMMarker","Popup","CardContent_default","popUpContent","title","gutterBottom","pos","BranchName","HotlineNumber","latitude","longitude","Marker","renderMarkerClusterGroup","padding","&:last-child","findBankNameByIdx","filter","ATMDetailContent","handleDialogClose","saveMap","isMapInit","renderDrawer","toolbar","Drawer_default","drawer","paper","drawerPaper","renderDrawerContent","renderNetworkIcon","renderServiceList","List_default","dense","denseList","renderOpeningHours","openingHours","oh","ohStr","OpenDayDescription","OpenTime","CloseTime","renderListItem","subheader","ListSubheader_default","subHeader","listRoot","_this$props$atm","ATMServices","_this$props$atm$ATMAd","CountryCode","TerritoryName","DistrictName","OpeningHours","inline","selectedLocation","currentLocation","zoom","selectedPosition","currentPosition","keys","selectedZoomLvl","icon","L","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","zoomLvlToUse","content","es_Map","mapContainer","center","maxZoom","ref","TileLayer","attribution","url","Leaflet_ATMMarker","location","flexShrink","mixins","background","networkAvatar","deepOrange","ATMItemDetail","appBar","Close_default","flex","ATMDetail_ATMDetailContent","zIndex","Transition","Slide_default","assign","direction","ATMItemDialog","TransitionComponent","ATMDetail_ATMItemDetail","detail_dialog_open","memo","styled","_ref","classnames","_templateObject","ATMListing","loadItems","size","hasMoreItems","atmItems","slice","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","Loader","useWindow","ATMListing_ATMItem","ATMListing_ATMItemDialog","overflow","ATM","record","Network","CoinSortIndicator","ForeignCurrencyIndicator","DisabledAccessIndicator","BillPaymentIndicator","CashWithdrawalIndicator","CashDepositIndicator","ChequeDepositIndicator","RMBandForeignCurrencyATMIndicator","TalkATMIndicator","MTRStationOfficeIndicator","ChequeDepositMachineCutOffTime","copyFields","copyTo","copyFrom","_arr","_i","field","hasOwnProperty","isArray","serviceKey","isServiceIndicatorReturnTrue","dayOfWeek","moment","format","openingHour","find","openTime","closeTime","isBefore","add","isBetween","HangSengATM","_ATM","banks","CashDepositMachineIndicator","ChequeDepositMachineIndicator","RMBATMwithoutForeignCurrencyIndicator","inherits","HsbcATM","_ATM2","JetcoATM","_ATM3","loadHSBCData","HSBC_DATA","Brand","loadHangSengData","HANG_SENG_DATA","loadJetcoData","JETCO_DATA","ATMListingContainer","initATMData","detectCurrentLocation","_this$state","me","navigator","geolocation","getCurrentPosition","coords","sortATMData","err","timeout","ATMs","toConsumableArray","sortedAllATMs","sort","x","y","ATMFilter_ATMFilterDialog","components_ATMListing_ATMListing","atmData","ATMMarkerClusterGroup","react_leaflet_markercluster_min_default","onMouseOver","e","openPopup","onMouseOut","markerOnClick","renderPopUp","ATMMapContainer","handleMoveEnd","evt","latlng","getZoom","onmoveend","Leaflet_ATMMarkerClusterGroup","styles","landingContainer","_landingContainer","textAlign","card","cardContent","media","objectFit","divider","img","desc","ATMLandingContainer","atmNetworkOnClick","renderCard","Card_default","CardActionArea_default","CardMedia_default","image","index_es","dialog","containers_AppNavbar_AppNavbar","Landing_ATMListingContainer","Landing_ATMMapContainer","toggle_map_view","Routes","Route","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","filterData","atms","includes","isServiceAvaliable","atmDataReducer","action","objectSpread","raw_data","locationReducer","pageReducer","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.81a7c409.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION,\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_FILTER_OPTION,\n    TOGGLE_ATM_FILTER_DIALOG,\n    TOGGLE_MAP_VIEW\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, idx, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, idx: idx, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nconst dispatchToggleATMDetailDialog = (open) => {\n    return {type: TOGGLE_ATM_DETAIL_DIALOG, open: open}\n}\n\nconst dispatchToggleFilterOption = (key, value) => {\n  return {type: TOGGLE_FILTER_OPTION, key, value}\n}\n\nconst dispatchToggleATMFilterDialog = (open) => {\n    return {type: TOGGLE_ATM_FILTER_DIALOG, open: open}\n}\n\nconst dispatchToggleMapView = (open) => {\n    return {type: TOGGLE_MAP_VIEW, open: open}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, idx, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, idx, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}\n\nexport const toggleATMDetailDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMDetailDialog(open))\n    }\n}\n\nexport const toggleFilterOption = (key, value) => {\n  return dispatch => {\n    dispatch(dispatchToggleFilterOption(key, value));\n  }\n}\n\nexport const toggleATMFilterDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMFilterDialog(open))\n    }\n}\n\nexport const toggleMapView = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleMapView(open))\n    }\n}","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\nexport const TOGGLE_ATM_DETAIL_DIALOG = 'TOGGLE_ATM_DETAIL_DIALOG';\nexport const TOGGLE_FILTER_OPTION = 'TOGGLE_FILTER_OPTION';\nexport const TOGGLE_ATM_FILTER_DIALOG = 'TOGGLE_ATM_FILTER_DIALOG';\nexport const TOGGLE_MAP_VIEW = 'TOGGLE_MAP_VIEW';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MapIcon from '@material-ui/icons/Map';\nimport FilterIcon from '@material-ui/icons/Tune';\nimport {\n  toggleATMFilterDialog,\n  toggleMapView\n} from '../../actions';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '64px'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  backButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  dialogTitle: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n    whiteSpace: 'nowrap'\n  },\n  landingTitle: {\n    margin: 'auto',\n    fontFamily: 'Roboto Condensed, sans-serif',\n    fontWeight: 700,\n    lineHeight: 1.6,\n    fontSize: 24\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.common.white,\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.85),\n    },\n    color: '#f50057',\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: '100%',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  filterIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    cursor: 'pointer',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    top: 0\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 100,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nclass AppNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleMapview: true\n    };\n  }\n\n  backToLandingPage = () => {\n    this.props.backToLandingPage();\n  }\n\n  handleViewChange = () => {\n    const { toggleMapview } = this.state;\n    this.props.toggleMapView(toggleMapview);\n    this.setState({\n      toggleMapview: !toggleMapview\n    })\n  };\n\n  handleFilterOnclick = () => {\n    this.props.toggleATMFilterDialog(true);\n  }\n\n\n  render() {\n    const { classes, isDialogAppNavBar } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" color=\"secondary\">\n          <Toolbar>\n            { isDialogAppNavBar && <IconButton className={classes.backButton} color=\"inherit\" aria-label=\"Back to Home page\" onClick={() => {this.backToLandingPage()}}>\n              <ArrowBackIcon />\n            </IconButton>}\n            <Typography className={isDialogAppNavBar ? classes.dialogTitle : classes.landingTitle} variant=\"h6\" color=\"inherit\">\n              Hong Kong ATM Locator\n            </Typography>\n\n            { isDialogAppNavBar && \n              <React.Fragment>\n                <div className={classes.search}>\n                  <div className={classes.searchIcon}>\n                    <SearchIcon />\n                  </div>\n                  <InputBase\n                    placeholder=\"Search…\"\n                    classes={{\n                      root: classes.inputRoot,\n                      input: classes.inputInput,\n                    }}\n                  />\n                  <div className={classes.filterIcon} onClick={() => {this.handleFilterOnclick()}}>\n                    <FilterIcon/>\n                  </div>\n                </div>\n                <div className={classes.grow} />\n                <div >\n                  <IconButton\n                    onClick={this.handleViewChange}\n                    color=\"inherit\"\n                  >\n                    <MapIcon />\n                  </IconButton>\n                </div>\n              </React.Fragment>\n            }\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  isDialogAppNavBar: PropTypes.bool.isRequired,\n  backToLandingPage: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      toggleATMFilterDialog: (open) => {\n          dispatch(toggleATMFilterDialog(open))\n      },\n      toggleMapView: (flag) => {\n          dispatch(toggleMapView(flag))\n      }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(AppNavbar));","import React, { Component } from 'react';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = (WrappedComponent) => {\n  class AppHOC extends Component {\n    render() {\n      return (\n        <MuiThemeProvider theme={theme}>\n            <AppNavbar isDialogAppNavBar={false}/>\n            <WrappedComponent/>\n        </MuiThemeProvider>\n      );\n    }\n  }\n  return AppHOC;\n}\n\nexport default App;","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nconst distanceConverter = (distance) => {\n\tif(!distance) {\n\t\treturn null;\n\t}\n\treturn distance > 1 ? Math.round(distance) + 'km' : Math.round(distance * 1000) + 'm';\n}\n\nexport {\n    distanceBetweenTwoGeoPoints,\n\tdistanceConverter\n}","export const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n}\n\nexport const hangSeng = {\n    idx: 'hang_seng',\n    en: 'Hang Seng Bank',\n    zh: ''\n}\n\nexport const bochk = {\n    idx: 'bochk',\n    en: 'Bank of China (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const bankcomm = {\n    idx: 'bankcomm',\n    en: 'Bank of Communications Co., Ltd.',\n    zh: ''\n}\n\nexport const cncbinternational = {\n    idx: 'cncbinternational',\n    en: 'China CITIC Bank International Limited',\n    zh: ''\n}\n\nexport const asiaccb = {\n    idx: 'asiaccb',\n    en: 'China Construction Bank (Asia) Corporation Limited',\n    zh: ''\n}\n\nexport const cmbchina = {\n    idx: 'cmbchina',\n    en: 'China Merchants Bank Hong Kong Branch',\n    zh: ''\n}\n\nexport const chiyubank = {\n    idx: 'chiyubank',\n    en: 'Chiyu Banking Corporation Limited',\n    zh: ''\n}\n\nexport const chonghingbank = {\n    idx: 'chonghingbank',\n    en: 'Chong Hing Bank Limited',\n    zh: ''\n}\n\nexport const citibank = {\n    idx: 'citibank',\n    en: 'Citibank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cmbwinglungbank = {\n    idx: 'cmbwinglungbank',\n    en: 'CMB Wing Lung Bank Limited',\n    zh: ''\n}\n\nexport const dahsing = {\n    idx: 'dahsing',\n    en: 'Dah Sing Bank, Limited',\n    zh: ''\n}\n\nexport const dbs = {\n    idx: 'dbs',\n    en: 'DBS Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const fubonbank = {\n    idx: 'fubonbank',\n    en: 'Fubon Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const icbcasia = {\n    idx: 'icbcasia',\n    en: 'Industrial and Commercial Bank of China (Asia) Limited',\n    zh: ''\n}\n\nexport const ocbcwhhk = {\n    idx: 'ocbcwhhk',\n    en: 'OCBC Wing Hang Bank Limited',\n    zh: ''\n}\n\nexport const publicbank = {\n    idx: 'publicbank',\n    en: 'Public Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const shacombank = {\n    idx: 'shacombank',\n    en: 'Shanghai Commercial Bank Limited',\n    zh: ''\n}\n\nexport const nanyang = {\n    idx: 'shacombank',\n    en: 'Nanyang Commercial Bank Limited',\n    zh: ''\n}\n\nexport const standardchartered = {\n    idx: 'standardchartered',\n    en: 'Standard Chartered Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const hkbea = {\n    idx: 'hkbea',\n    en: 'The Bank of East Asia, Limited',\n    zh: ''\n}\n\nexport const jetco = [\n    bochk,\n    bankcomm,\n    cncbinternational,\n    asiaccb,\n    cmbchina,\n    chiyubank,\n    chonghingbank,\n    citibank,\n    cmbwinglungbank,\n    dahsing,\n    dbs,\n    fubonbank,\n    icbcasia,\n    ocbcwhhk,\n    nanyang,\n    publicbank,\n    shacombank,\n    standardchartered,\n    hkbea\n]\n\nexport const allBanks = [\n    hsbc,\n    hangSeng,\n    ...jetco\n];","export const jetco = {\n    idx: 'jetco',\n    en: 'Jetco',\n    zh: ''\n};\n\nexport const hangseng = {\n    idx: 'hang_seng',\n    en: 'Hang Seng',\n    zh: ''\n};\n\nexport const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n};\n\nexport const networks = [\n    jetco,\n    hangseng,\n    hsbc\n]","export const SERVICE_COIN_SORT = {\n  idx: 'coin_sort',\n  api_idx: 'CoinSortIndicator',\n  en: 'Coin Sort',\n  tc: ''\n};\n\nexport const SERVICE_FOREIGN_CURRENCY = {\n  idx: 'foreign_currency',\n  api_idx: 'ForeignCurrencyIndicator',\n  en: 'Foreign Currency',\n  tc: ''\n};\n\nexport const SERVICE_DISABLED_ACCESS = {\n  idx: 'disabled_access',\n  api_idx: 'DisabledAccessIndicator',\n  en: 'Disabled Access',\n  tc: ''\n};\n\nexport const SERVICE_BILL_PAYMENT = {\n  idx: 'bill_payment',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Bill Payment',\n  tc: ''\n};\n\nexport const SERVICE_CASH_WITHDRAWAL = {\n  idx: 'cash_withdrawal',\n  api_idx: 'CashWithdrawalIndicator',\n  en: 'Cash Withdrawal',\n  tc: ''\n};\n\nexport const SERVICE_CASH_DEPOSIT = {\n  idx: 'cash_deposit',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Cash Deposit',\n  tc: ''\n};\n\nexport const SERVICE_CHEQUE_DEPOSIT = {\n  idx: 'cheque_deposit',\n  api_idx: 'ChequeDepositIndicator',\n  en: 'Cheque Deposit',\n  tc: ''\n};\n\nexport const SERVICES = [\n  SERVICE_COIN_SORT,\n  SERVICE_FOREIGN_CURRENCY,\n  SERVICE_DISABLED_ACCESS,\n  SERVICE_BILL_PAYMENT,\n  SERVICE_CASH_WITHDRAWAL,\n  SERVICE_CASH_DEPOSIT,\n  SERVICE_CHEQUE_DEPOSIT\n];\n\nexport const WEEK_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { jetco } from '../../constants/banks';\nimport { networks } from '../../constants/networks';\nimport { connect } from 'react-redux';\nimport { SERVICES, WEEK_DAYS } from '../../constants/services';\n\n\nimport {\n  toggleFilterOption,\n  toggleATMFilterDialog\n} from '../../actions'\n\n\nconst styles = {\n  dialogCustomizedWidth: {\n    width: '80%'\n  }\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all',\n        expanded: false\n    }\n  }\n\n  handleSelectChange(event) {\n      // this.setState({ [event.target.name]: event.target.value });\n      this.props.toggleFilterOption(event.target.name, event.target.value);\n  };\n\n  handleCheckboxChange(name) {\n      return function(event){\n          // this.setState({ [name]: event.target.checked });\n          this.props.toggleFilterOption(name, event.target.checked);\n      }\n  };\n\n  renderNetworkSelect() {\n    const { classes, filters: { network }} = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={network === undefined ? 'all' : network}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n              {\n                networks.map((network, index) => {\n                  return (\n                    <MenuItem value={network.idx} key={index}>\n                      {network.en}\n                    </MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    /*\n      TODO: the value s restricted based on Network\n    */\n    const { classes, filters: { bank } } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={bank === undefined ? 'all' : bank}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n            {\n              jetco.map((bank, index) => {\n                return (\n                  <MenuItem value={bank.idx} key={index}>\n                    {bank.en}\n                  </MenuItem>\n                );\n              })\n            }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const services = SERVICES;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             services.map((service, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state[service]}\n                      onChange={this.handleCheckboxChange(service).bind(this)}\n                      value={service.en}\n                      color=\"secondary\"\n                    />\n                  }\n                  label={service.en}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = WEEK_DAYS;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day).bind(this)}\n                      value={day}\n                      color=\"secondary\"\n                    />\n                  }\n                  label={day}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Hours</FormLabel>\n        <FormGroup>\n           {/* TODO: */}\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option).bind(this)}\n                    value={option}\n                    color=\"secondary\"\n                  />\n                }\n                label={option}\n                key={index}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  handleClose = () => {\n    this.props.toggleATMFilterDialog(false);\n  }\n\n  render() {\n     const { classes, fullScreen } = this.props;\n    /*\n      TODO: Add Grid for responsive design\n    */\n    return (\n      <Dialog\n          fullScreen={fullScreen}\n          open={this.props.open || false}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n          fullWidth={true}\n          maxWidth = {'md'}\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Advanced Filter\"}</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={24}>\n              {/* { this.renderNetworkSelect() }\n              <Divider variant=\"middle\" />\n              { this.renderBankSelect() }\n              <Divider variant=\"middle\" /> */}\n              <Grid item xs={6} md={3}>\n                { this.renderServicesCheckbox() }\n              </Grid>\n              <Grid item xs={6} md={3}>\n                { this.renderOpeningDayCheckbox() }\n              </Grid>\n              <Grid item xs={6} md={3}>\n                { this.renderOpeningHourCheckbox() }\n              </Grid>\n              <Grid item xs={6} md={3}>\n                { this.renderOpeningOrClosingCheckbox() }\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n  }\n}\n\nATMFilterDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n      filters: state.atm.filters,\n      open: state.page.filter_dialog_open,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      toggleFilterOption: (key, value) => {\n          dispatch(toggleFilterOption(key, value));\n      },\n      toggleATMFilterDialog: (open) => {\n        dispatch(toggleATMFilterDialog(open))\n      } \n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withMobileDialog()(ATMFilterDialog)));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceConverter } from '../../utils/geoUtils';\n\nimport {\n    setSelectedLocation,\n    toggleATMDetailDialog\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0,\n        width: '100px',\n    },\n    bankIcon: {\n      width: '50px',\n      height: '50px',\n      marginRight: '20px',\n    }\n});\n\nclass ATMItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderBankIcon(atm) {\n      const { classes } = this.props;\n      return (\n        <img alt={atm.Bank} src={\"./images/\" + atm.Bank + \".png\"} className={classes.bankIcon}></img>\n      )\n    }\n\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distanceConverter(distance);\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n\n    atmListItemOnClick(atm, idx) {\n        const { ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n        if(LatitudeDescription && LongitudeDescription){\n            this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription, idx);\n        }\n\n        // toggle detail page\n        this.props.toggleATMDetailDialog(true);\n    }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMAddress, distance } = atm;\n\n        return (\n            <ListItem button key={ idx } onClick={() => this.atmListItemOnClick(atm, idx)}>\n                { this.renderBankIcon(atm) }\n                <div>\n                    <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                                { ATMAddress.AddressLine }\n                                <br/>\n                                { this.renderDistance(distance) }\n\n                            </React.Fragment>\n                        }\n                    />\n                    <div style={{display: 'flex'}}>\n                    { this.renderOpeningClosingTag(atm) }\n                    </div>\n\n\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng, idx) => {\n            dispatch(setSelectedLocation(lat, lng, idx))\n        },\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarker extends React.Component {\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n\n        const latitude = atm.ATMAddress.LatitudeDescription;\n        const longitude = atm.ATMAddress.LongitudeDescription;\n        return (\n            <Marker\n                position= { [latitude, longitude] }\n                // onMouseOver= { (e) => {\n                //     e.target.openPopup();\n                // }}\n                // onMouseOut= { (e) => {\n                //     // e.target.closePopup();\n                // }}\n            >\n            {/* { this.renderPopUp(atm) } */}\n            </Marker>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarker.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarker));\n","import { allBanks } from '../constants/banks';\n\nconst findBankNameByIdx = (idx) => {\n    const bank = allBanks.filter(bank => {\n        return bank.idx === idx;\n    });\n    return bank[0] ? bank[0].en : '';\n}\n\nexport {\n    findBankNameByIdx\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport ATMMarker from '../../components/Leaflet/ATMMarker';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\nimport { distanceConverter } from '../../utils/geoUtils';\nimport { findBankNameByIdx } from '../../utils/bankUtils';\nimport { SERVICES } from '../../constants/services';\nimport {\n    toggleATMDetailDialog,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions';\n\nconst drawerWidth = 400\n\nconst styles = theme => ({\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: 'calc(100% - 400px)',\n        height: '100%',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        paddingTop: '64px'\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n     },\n     subHeader: {\n        height: '28px'\n     },\n     networkAvatar: {\n        width: '60px',\n        height: '60px',\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n     },\n     bankIcon: {\n      width: '50px',\n      height: '50px',\n    },\n    denseList: {\n        paddingTop: '4px',\n        paddingBottom: '4px',\n        paddingLeft: '0px',\n        paddingRight: '0px'\n    }\n});\n\nclass ATMDetailContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 16,\n            isMapInit: false\n        }\n    }\n\n    componentDidMount() {\n        const { selectedLocation, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length === 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n            this.setState({selectedLocation: selectedPosition})\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length === 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n            this.setState({currentLocation: currentPosition})\n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    renderDrawer = () => {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <div className={classes.toolbar} />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n                    { this.renderDrawerContent() }\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n\n    renderNetworkIcon = (bank) => {\n        const { classes } = this.props;\n        return (\n            <img alt={bank} src={\"./images/\" + bank + \".png\"} className={classes.bankIcon}></img>\n        );\n    }\n\n    // TODO: revise UI\n    renderServiceList = (services) => {\n        const { classes } = this.props;\n        // const { BillPaymentIndicator, CashDepositIndicator, CashWithdrawalIndicator, ChequeDepositIndicator, CoinSortIndicator, DisabledAccessIndicator, ForeignCurrencyIndicator } = services;\n        return (\n            <List \n                dense={true}\n            >\n                {\n                    SERVICES.map((service, idx) => {\n                        if(services[service.api_idx]) {\n                            return (\n                                <ListItem className={classes.denseList} key={idx}>\n                                    <ListItemText primary={service.en}></ListItemText>\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            (null)\n                        );\n                    })\n                }\n            </List>\n        );\n    }\n\n    // TODO: revise UI\n    renderOpeningHours = (openingHours) => {\n        const { classes } = this.props;\n        return (\n             <List \n                dense={true}\n            >\n                {\n                    openingHours.map((oh, idx) => {\n                       const ohStr = `${oh.OpenDayDescription } : ${oh.OpenTime} - ${oh.CloseTime}`;\n                       return (\n                           <ListItem className={classes.denseList} key={idx}>\n                                <ListItemText primary={ohStr}></ListItemText>\n                            </ListItem>\n                       );\n                    })\n                }\n            </List>\n        )\n    }\n\n    renderListItem = (subheader, value) => {\n        const { classes } = this.props;\n\n        if(!subheader && !value) {\n            return (null);\n        }\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={classes.subHeader}>{subheader}</ListSubheader>}\n                className={classes.listRoot}\n                dense={true}\n                >\n                <ListItem>\n                    <ListItemText primary={value}/>\n                </ListItem>\n            </List>\n        );\n    }\n\n    renderDrawerContent = () => {\n        const { atm: { ATMName, ATMServices, ATMAddress: { CountryCode, TerritoryName, DistrictName, AddressLine, LatitudeDescription, LongitudeDescription }, Bank, HotlineNumber, distance, OpeningHours}, classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <List className={classes.listRoot}>\n                    <ListItem alignItems=\"flex-start\">\n                        { this.renderNetworkIcon(Bank) }\n                        <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                ({ LatitudeDescription },{ LongitudeDescription })\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                </List>\n\n                { this.renderListItem('Bank', findBankNameByIdx(Bank)) }\n                { this.renderListItem('District', CountryCode + ' > ' + TerritoryName + ' > ' + DistrictName) }\n                { this.renderListItem('Address', AddressLine) }\n                { this.renderListItem('Services', this.renderServiceList(ATMServices)) }\n                { this.renderListItem('Opening Hours', this.renderOpeningHours(OpeningHours)) }\n                { this.renderListItem('Hotline Number', HotlineNumber) }\n                { this.renderListItem('Distance', distanceConverter(distance)) }\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { atm, classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n       let zoomLvlToUse = selectedZoomLvl;\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                { this.renderDrawer() }\n                <div className={classes.content}>\n                    <Map\n                        className={classes.mapContainer}\n                        center={selectedLocation}\n                        zoom= {zoomLvlToUse}\n                        maxZoom={18}\n                        // dragging={false}\n                        ref={this.saveMap}>\n\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        {/* <ATMMarkerClusterGroup/> */}\n                        <Marker position={currentLocation} icon={icon}/>\n                        <ATMMarker atm={atm}/>\n                    </Map>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContent.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMDetailContent));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMDetailContent from './ATMDetailContent';\nimport {\n    toggleATMDetailDialog\n} from '../../actions';\n\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: 3000,\n    },\n    root: {\n        display: 'flex',\n    }\n});\n\nclass ATMItemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           \n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    render() {\n        const { atm, classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar className={classes.appBar} position=\"fixed\" color=\"secondary\">\n                    <Toolbar>\n                        <IconButton  onClick={this.handleDialogClose} aria-label=\"Close\">\n                        <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            {atm.ATMName}\n                        </Typography>\n                    </Toolbar>\n                    </AppBar>\n                    <ATMDetailContent atm={atm} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItemDetail.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDetail));\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport ATMItemDetail from '../ATMDetail/ATMItemDetail';\n\nconst styles = {\n\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ATMItemDialog extends React.Component {\n\n  render() {\n    const { atm } = this.props;\n    \n    {/* TODO: Investigate idx = -1. Prolly due to zoomLevel */}\n    if(!this.props.selectedLocation || !atm || this.props.selectedLocation.idx < 0) {\n      return (null);\n    }\n    \n    const idx = this.props.selectedLocation.idx;\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open || false}\n        onClose={this.handleDialogClose}\n        TransitionComponent={Transition}\n      >\n        <ATMItemDetail atm={atm[idx]}/>\n      </Dialog>\n    );\n  }\n}\n\nATMItemDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  atm: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      atm: state.atm.data,\n      open: state.page.detail_dialog_open,\n      selectedLocation: state.location.selectedLocation\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDialog));\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport styled from \"styled-components\";\n\nexport default React.memo(styled(({ className }) => (\n  <div className={classnames(\"loader\", className)}>\n    <span className=\"loader__ball loader__ball--1\" />\n    <span className=\"loader__ball loader__ball--2\" />\n    <span className=\"loader__ball loader__ball--3\" />\n  </div>\n))`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n\n  span.loader__ball {\n    display: inline-block;\n    margin: auto 0.25rem;\n    height: 0.75rem;\n    width: 0.75rem;\n    border-radius: 0.375rem;\n    background: #06c;\n\n    &.loader__ball--1,\n    &.loader__ball--2,\n    &.loader__ball--3 {\n      animation: bulging 2s infinite ease-in-out;\n    }\n\n    &.loader__ball--1 {\n      animation-delay: -0.4s;\n    }\n\n    &.loader__ball--2 {\n      animation-delay: -0.2s;\n    }\n\n    @keyframes bulging {\n      0%,\n      80%,\n      100% {\n        transform: scale(0);\n        opacity: 0.5;\n      }\n      40% {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n  }\n`);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ATMItem from './ATMItem';\nimport ATMItemDialog from './ATMItemDialog';\nimport Loader from '../Loader/Loader';\n\nconst styles = theme => ({\n  root: {\n    height: '100%',\n    overflow: 'auto'\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMoreItems: true,\n      atmItems: [],\n      size: 10\n    };\n  }\n\n  loadItems = () => {\n    const { atm } = this.props;\n    const { size } = this.state;\n\n    if(atm.length > 0) {\n      if(size > atm.length) {\n        this.setState({\n          hasMoreItems: false\n        })\n      } else {\n        this.setState({\n          atmItems: atm.slice(0, size),\n          size: size + 10\n        })\n      }\n    };\n  };\n\n  render() {\n    const { classes } = this.props;\n  \n    return (\n      <div className={classes.root}>\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={this.loadItems}\n              hasMore={this.state.hasMoreItems}\n              loader={<Loader/>}\n              useWindow={false}\n              >\n                <List>\n              {\n                this.state.atmItems.map((atm, idx) => {\n                  return (\n                    <ATMItem atm={atm} key={idx} idx={idx}/>\n                  )\n                })\n              }\n              </List>\n          </InfiniteScroll>\n          <ATMItemDialog/>\n        </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","import { isArray } from \"util\";\nimport {\n  SERVICE_BILL_PAYMENT, SERVICE_CASH_DEPOSIT, SERVICE_CASH_WITHDRAWAL, SERVICE_CHEQUE_DEPOSIT, SERVICE_COIN_SORT,\n  SERVICE_DISABLED_ACCESS, SERVICE_FOREIGN_CURRENCY,\n  WEEK_DAYS\n} from '../constants/services';\nimport * as banks from '../constants/banks';\nimport * as networks from '../constants/networks';\nimport * as moment from 'moment';\n\nclass ATM {\n  Bank = \"\";\n  Network = \"\";\n  ATMName = \"\";\n  HotlineNumber = \"\";\n  ATMAddress = {\n    CountryCode: \"HK\",\n    TerritoryName: \"\",\n    DistrictName: \"\",\n    AddressLine: [],\n    LatitudeDescription: 0,\n    LongitudeDescription: 0,\n  };\n  ATMServices = {\n    CoinSortIndicator: false,\n    ForeignCurrencyIndicator: false,\n    DisabledAccessIndicator: false,\n    BillPaymentIndicator: false,\n    CashWithdrawalIndicator: false,\n    CashDepositIndicator: false,\n    ChequeDepositIndicator: false,\n    RMBandForeignCurrencyATMIndicator: false,\n    TalkATMIndicator: false,\n    MTRStationOfficeIndicator: false,\n    ChequeDepositMachineCutOffTime: \"\",\n  };\n  OpeningHours = [];\n\n  constructor(record) {\n    copyFields(this, record);\n  }\n\n  isServiceAvaliable(serviceKey) {\n    if (serviceKey === SERVICE_COIN_SORT) {\n      return this.isServiceIndicatorReturnTrue('CoinSortIndicator');\n    } else if (serviceKey === SERVICE_FOREIGN_CURRENCY) {\n      return this.isServiceIndicatorReturnTrue('ForeignCurrencyIndicator');\n    } else if (serviceKey === SERVICE_DISABLED_ACCESS) {\n      return this.isServiceIndicatorReturnTrue('DisabledAccessIndicator');\n    } else if (serviceKey === SERVICE_BILL_PAYMENT) {\n      return this.isServiceIndicatorReturnTrue('BillPaymentIndicator');\n    } else if (serviceKey === SERVICE_CASH_WITHDRAWAL) {\n      return this.isServiceIndicatorReturnTrue('CashWithdrawalIndicator');\n    } else if (serviceKey === SERVICE_CASH_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('CashDepositIndicator');\n    } else if (serviceKey === SERVICE_CHEQUE_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('ChequeDepositIndicator');\n    }\n  }\n\n  isServiceIndicatorReturnTrue(field) {\n    return this.ATMServices\n      && this.ATMServices[field] !== undefined\n      && this.ATMServices[field] === true;\n  }\n\n  isOpenNow() {\n    const dayOfWeek = moment().format('dddd');\n    const openingHour = this.OpeningHours.find(oh => oh.OpenDayDescription === dayOfWeek);\n    if (!openingHour) {\n      return null;\n    }\n    const openTime = moment(openingHour.OpenTime, 'HH:mm');\n    const closeTime = moment(openingHour.CloseTime, 'HH:mm');\n    // For handling the case that the opening hour is 06:00 - 01:00 (usually means it is morning next day)\n    if (closeTime.isBefore(openTime)\n    ) {\n      closeTime.add(1, 'day');\n    }\n    return moment().isBetween(openTime, closeTime);\n  }\n}\n\n\n\nfunction copyFields(copyTo, copyFrom) {\n  for (const field of Object.keys(copyTo)) {\n    if (copyFrom && copyFrom.hasOwnProperty(field)) {\n      if (typeof (copyFrom[field]) !== 'object' || isArray(copyFrom[field])) {\n        copyTo[field] = copyFrom[field];\n      } else {\n        copyFields(copyTo[field], copyFrom[field]);\n      }\n    }\n  }\n}\n\nexport class HangSengATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hangSeng.idx;\n    this.Network = networks.hangseng.idx;\n    this.ATMServices.CashDepositIndicator = record.ATMServices.CashDepositMachineIndicator;\n    this.ATMServices.ChequeDepositIndicator = record.ATMServices.ChequeDepositMachineIndicator;\n    this.ATMServices.ForeignCurrencyIndicator =\n      record.ATMServices.RMBandForeignCurrencyATMIndicator\n      && !record.ATMServices.RMBATMwithoutForeignCurrencyIndicator;\n\n  }\n}\n\nexport class HsbcATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hsbc.idx;\n    this.Network = networks.hsbc.idx;\n  }\n}\n\nexport class JetcoATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = record.Bank; //TODO: lookup bank idx\n    this.Network = networks.jetco.idx;\n  }\n}","import HANG_SENG_DATA from '../data/hang_seng.json';\nimport HSBC_DATA from '../data/hsbc.json';\nimport JETCO_DATA from '../data/jetco_en.json';\n\nimport { HangSengATM, HsbcATM, JetcoATM } from './../models/atm';\n\nexport const loadAllData = () => {\n  return [...loadHangSengData(), ...loadHSBCData(), ...loadJetcoData()]\n}\n\nexport const loadHSBCData = () => {\n  const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n  return hsbcATMs.map(atm => new HsbcATM(atm));\n}\n\nexport const loadHangSengData = () => {\n  const hangSengATMs = HANG_SENG_DATA.data[0].Brand[0].ATM;\n  return hangSengATMs.map(atm => new HangSengATM(atm));\n}\n\nexport const loadJetcoData = () => {\n  const JetcoATMs = JETCO_DATA.data[0].Brand[0].ATM;\n  return JetcoATMs.map(atm => new JetcoATM(atm));\n}\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport ATMFilterDialog from '../../components/ATMFilter/ATMFilterDialog';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport { loadAllData, loadHSBCData, loadHangSengData, loadJetcoData } from '../../utils/dataLoader';\n\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n\n  };\n\nclass ATMListingContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const { currentLocation, selectedLocation } = this.state;\n        const me = this;\n\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n                me.props.setCurrentLocation(position.coords.latitude, position.coords.longitude);\n                me.props.setSelectedLocation(position.coords.latitude, position.coords.longitude);\n                me.sortATMData();\n             }, (err) => {\n                me.props.setCurrentLocation(currentLocation);\n                me.props.setSelectedLocation(selectedLocation);\n               // cannot get location, sort data anyway\n                me.sortATMData();\n             },{ timeout: 10000 });\n        } else {\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n        const { network } = this.props;\n        var ATMs = null;\n        if(network == 'hsbc') {\n            ATMs = loadHSBCData();\n        } else if(network == 'hangseng') {\n            ATMs = loadHangSengData();\n        } else if(network == 'jetco') {\n            ATMs = loadJetcoData();\n        } else {\n            ATMs = loadAllData();\n        }\n        this.props.setATMData(ATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n        if(atm) {\n            if(this.props.currentLocation !== undefined) {\n                location = this.props.currentLocation\n            }\n\n            const sortedAllATMs = [].concat(atm)\n             .sort( (x, y) => {\n                if(x.ATMAddress.LatitudeDescription != null && x.ATMAddress.LongitudeDescription != null &&\n                    y.ATMAddress.LatitudeDescription != null && y.ATMAddress.LongitudeDescription != null ) {\n                        const distanceX = distanceBetweenTwoGeoPoints(location.lat, location.lng, x.ATMAddress.LatitudeDescription, x.ATMAddress.LongitudeDescription);\n                        const distanceY = distanceBetweenTwoGeoPoints(location.lat, location.lng, y.ATMAddress.LatitudeDescription, y.ATMAddress.LongitudeDescription);\n                        return distanceX > distanceY ? 1 : -1;\n                    }\n                return -1;\n            })\n            .map( (atm) => {\n                atm.distance = distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription);\n                return atm;\n            });\n\n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ATMFilterDialog/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nATMListingContainer.propTypes = {\n    network: PropTypes.string.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMListingContainer));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarkerClusterGroup extends React.Component {\n    componentDidMount() {    \n    }\n\n    markerOnClick(data) {\n        // Center the map \n        // const { ATMAddress } = data;\n        // this.props.setSelectedLocation(ATMAddress.LatitudeDescription, ATMAddress.LongitudeDescription);\n    }\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n        return (\n            <MarkerClusterGroup>\n                {\n                    atm.map((data, idx) => {\n                        const latitude = data.ATMAddress.LatitudeDescription;\n                        const longitude = data.ATMAddress.LongitudeDescription;\n                        if(latitude !== undefined && longitude !== undefined) {\n                            return (\n                                <Marker \n                                    key= { idx }\n                                    position= { [latitude, longitude] } \n                                    onMouseOver= { (e) => {\n                                        e.target.openPopup();\n                                    }}\n                                    onMouseOut= { (e) => {\n                                        // e.target.closePopup();\n                                    }}\n                                    onClick = { () => this.markerOnClick(data) }\n                                >\n                                { this.renderPopUp(data) }\n                                </Marker>\n                            );\n                        }\n                        return (null);\n                    })\n                }\n            </MarkerClusterGroup>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarkerClusterGroup.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng) => {\n            dispatch(setSelectedLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarkerClusterGroup));\n  ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport ATMMarkerClusterGroup from '../../components/Leaflet/ATMMarkerClusterGroup';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: '100%',\n        height: '100%',\n    },\n  };\n\nclass ATMMapContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoom: 14,\n            isMapInit: false\n        }\n    }\n\n\n    handleMoveEnd = (evt) => {\n        // let latlng = evt.target.getCenter();\n        /*\n            TODO: better add a new function called setZoomLevel as selectedLocation should not be evt.target.getCenter()\n        */\n        let latlng = this.props.selectedLocation;\n        let zoomLvl = evt.target.getZoom();\n        this.props.setSelectedLocation(latlng.lat, latlng.lng, zoomLvl);\n    }\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    render() {\n        const { classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let zoomLvlToUse = selectedZoomLvl;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                <Map \n                    className={classes.mapContainer}\n                    center={selectedLocation} \n                    zoom= {zoomLvlToUse}\n                    maxZoom={zoomLvlToUse + 2} \n                    onmoveend={this.handleMoveEnd}\n                    ref={this.saveMap}>\n\n                    <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <ATMMarkerClusterGroup/>\n                    <Marker position={currentLocation} icon={icon}/>\n                    {/* {\n                        this.state.isMapInit && \n                            <ATMRouting map={this.map} from={currentLocation} to={selectedLocation}/>\n                    } */}\n                </Map>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMMapContainer));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport ATMListingContainer from './ATMListingContainer';\nimport ATMMapContainer from './ATMMapContainer';\nimport { Divider } from '@material-ui/core';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst styles = {\n    landingContainer: {\n        textAlign: 'center',\n        height: '100%',\n        color: '#ffffff',\n        background: '-webkit-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -webkit-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: '-o-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -o-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: '-moz-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -moz-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: 'linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        overflow: 'auto'\n    },\n    card: {\n        width: 345,\n        display: 'inline-flex',\n        margin: 20\n    },\n    cardContent: {\n        height: '180px'\n    },\n    media: {\n        objectFit: 'scale-down',\n        padding: '20px 0px'\n    },\n    subheader: {\n        fontFamily: 'Roboto Condensed, sans-serif',\n        fontWeight: 700,\n        lineHeight: 1.6,\n        fontSize: 24,\n        color: '#ffffff',\n        paddingTop: '25px',\n    },\n    divider: {\n        width: '300px',\n        height: '4px',\n        margin: '8px auto 0',\n        display: '#000000',\n        backgroundColor: '#ffffff'\n    },\n    paper: {\n        overflow: 'hidden'\n    }\n};\n\nconst hsbc = {\n    img: './images/hsbc.png',\n    title: {\n        en: 'HSBC',\n        tc: ''\n    },\n    desc: {\n        en: 'HSBC, officially known as The Hongkong and Shanghai Banking Corporation Limited, is a wholly owned subsidiary of HSBC, the largest bank in Hong Kong, and operates branches and offices throughout the Asia Pacific region, and in other countries around the world.',\n        tc: ''\n    }\n};\n\nconst hangseng = {\n    img: './images/hang_seng.png',\n    title: {\n        en: 'Hang Seng',\n        tc: ''\n    },\n    desc: {\n        en: 'Hang Seng Bank, Limited is a Hong Kong-based banking and financial services company with headquarters in Central, Hong Kong. It is one of Hong Kong\\'s leading public companies in terms of market capitalisation and is part of the HSBC Group, which holds a majority equity interest in the bank. ',\n        tc: ''\n    }\n};\n\nconst jetco = {\n    img: './images/jetco.png',\n    title: {\n        en: 'Jetco',\n        tc: ''\n    },\n    desc: {\n        en: 'JETCO is the biggest network of automatic teller machines and it is a bank consortium chartered to develop innovative and secure financial technology services for its member banks',\n        tc: ''\n    }\n};\n\nclass ATMLandingContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            network: 'all'\n        }\n    }\n\n    atmNetworkOnClick = (network) => {\n        this.setState({ open: true, network });\n    }\n\n    backToLandingPage = () => {\n        this.setState({ open: false });\n    }\n\n    renderCard = (network) => {\n        const { classes } = this.props;\n        var data = null;\n\n        if(network == 'hsbc') {\n            data = hsbc;\n        }\n\n        if(network == 'hangseng') {\n            data = hangseng;\n        }\n\n        if(network == 'jetco') {\n            data = jetco;\n        }\n\n        if(data == null) {\n            return (null);\n        }\n\n        return (\n            <Card className={classes.card} onClick={() => this.atmNetworkOnClick(network)}>\n                <CardActionArea>\n                    <CardMedia\n                    component=\"img\"\n                    alt={ data.title.en }\n                    className={classes.media}\n                    height=\"140\"\n                    image={ data.img }\n                    title={ data.title.en }\n                    />\n                    <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        { data.title.en }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.desc.en }\n                    </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        );\n    }\n\n    render() {\n        const { classes, toggleMapView } = this.props;\n        const { network } = this.state;\n        \n        return (\n            <React.Fragment className={classes.root}>\n                <div className={classes.landingContainer}>\n                    <Typography className={classes.subheader} variant=\"h6\" color=\"inherit\">\n                    Hong Kong ATM Locator\n                        <Divider className={classes.divider}/>\n                    </Typography>\n\n                   <div>\n                    { this.renderCard('hsbc') }\n                    { this.renderCard('hangseng') }\n                    { this.renderCard('jetco') }\n                   </div>\n                </div>\n                {<Dialog\n                    fullScreen\n                    open={this.state.open}\n                    TransitionComponent={Transition}\n                    className={classes.dialog}\n                    PaperProps ={{\n                        classes: {\n                            root: classes.paper\n                        }\n                    }}\n                >\n                     <AppNavbar backToLandingPage={this.backToLandingPage} isDialogAppNavBar={true}/>\n\n                    { !toggleMapView && <ATMListingContainer network={network}/>}\n                    { toggleMapView && <ATMMapContainer network={network}/>}\n                </Dialog>}\n            </React.Fragment>\n        );\n    }\n}\n\nATMLandingContainer.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n       toggleMapView: state.page.toggle_map_view\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      \n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMLandingContainer));","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport App from './containers/App/App';\nimport ATMLandingContainer from './containers/Landing/ATMLandingContainer';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <Route path='/' component={ATMLandingContainer}/>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA, TOGGLE_FILTER_OPTION\n} from '../actions/types';\nimport {\n  SERVICES, WEEK_DAYS\n} from '../constants/services';\n\nconst atmDataReducer = (state={\n  filters: {},\n  data: [],\n}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data, raw_data: action.data};\n        case TOGGLE_FILTER_OPTION:\n            const filters = {...state.filters, [action.key]: action.value };\n            return {...state, filters, data: filterData(state.raw_data, filters)};\n        default:\n            return state;\n    }\n}\n\n\nconst filterData = (atms, filter) => {\n  return atms.filter( atm => {\n    const shouldFilter = true;\n    for (const key of Object.keys(filter)) {\n      const value = filter[key];\n      if (\n        (SERVICES.includes(key) && value === true && !atm.isServiceAvaliable(key))\n        || (key === 'bank' && value !== 'all' && value !== atm.Bank)\n        || (key === 'network' && value !== 'all' && value !== atm.Network)\n        || (WEEK_DAYS.includes(key) && value === true && atm.OpeningHours.map( oh => oh.OpenDayDescription ).includes(key))\n        || (key === 'Opening' && value === true && atm.isOpenNow() === false) // DISCUSSION: this will show also the unknown atm as well\n        || (key === 'Closed' && value === true && atm.isOpenNow() === true)) {\n          return false\n        }\n    }\n    return shouldFilter;\n  })\n}\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={\n    selectedLocation: {\n        lat: 22.308,\n        lng: 114.1716\n    },\n    currentLocation: {\n        lat: 22.308,\n        lng: 114.1716\n    }\n}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng, idx: action.idx }, selectedZoomLvl : (action.zoomLvl === -1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import {\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_ATM_FILTER_DIALOG,\n    TOGGLE_MAP_VIEW\n} from '../actions/types';\n\nconst pageReducer = (state={toggle_map_view: false}, action) => {\n    switch (action.type) {\n        case TOGGLE_ATM_DETAIL_DIALOG:\n            return {...state, detail_dialog_open: action.open};\n        case TOGGLE_ATM_FILTER_DIALOG:\n            return {...state, filter_dialog_open: action.open};\n        case TOGGLE_MAP_VIEW:\n            return {...state, toggle_map_view: action.open};\n        default:\n            return state;\n\n    }\n}\n\nexport default pageReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer,\n    page: pageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\nimport css from './static/main.css';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}