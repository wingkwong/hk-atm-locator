{"version":3,"sources":["static/images/you_are_here.png","containers/Landing/ATMNetworkContainer.js","actions/index.js","actions/types.js","containers/AppNavbar/AppNavbar.js","utils/geoUtils.js","constants/banks.js","constants/networks.js","constants/services.js","components/ATMFilter/ATMTimePicker.js","components/ATMFilter/ATMFilterDialog.js","components/ATMListing/ATMItem.js","components/Leaflet/ATMMarker.js","utils/bankUtils.js","components/ATMDetail/ATMDetailContent.js","components/ATMDetail/ATMItemDetail.js","components/ATMListing/ATMItemDialog.js","components/Loader/Loader.js","components/ATMListing/ATMListing.js","models/atm.js","utils/dataLoader.js","containers/Landing/ATMListingContainer.js","components/Leaflet/ATMPopup.js","components/Leaflet/ATMMarkerClusterGroup.js","containers/Landing/ATMMapContainer.js","containers/ATM404Container/ATM404Container.js","containers/Landing/ATMLandingContainer.js","containers/ATMDetailContainer/ATMDetailContainer.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/pageReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","landingContainer","_landingContainer","textAlign","height","color","background","Object","defineProperty","card","width","display","margin","cardContent","media","objectFit","padding","subheader","fontFamily","fontWeight","lineHeight","fontSize","paddingTop","divider","backgroundColor","paper","overflow","hsbc","img","title","en","tc","desc","hangseng","jetco","ATMNetworkContainer","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderCard","network","classes","data","react_default","a","createElement","Link","to","pathname","concat","style","textDecoration","Card_default","className","CardActionArea_default","CardMedia_default","component","alt","image","CardContent_default","Typography_default","gutterBottom","variant","state","Fragment","index_es","Component","connect","ownProps","toggleMapView","page","toggle_map_view","dispatch","withStyles","setATMData","type","dispatchSetATMData","setSelectedLocation","lat","lng","idx","zoomLvl","arguments","length","undefined","dispatchSetSelectedLocation","setCurrentLocation","dispatchSetCurrentLocation","AppNavbar","handleViewChange","toggleMapview","setState","handleAboutToggle","toggleAboutDialog","root","AppBar_default","position","appbar","Toolbar_default","IconButton_default","backButton","aria-label","ArrowBack_default","grow","onClick","Map_default","React","flag","open","dispatchToggleMapView","dispatchToggleAboutDialog","theme","marginBottom","flexGrow","marginLeft","dialogTitle","whiteSpace","landingTitle","withTheme","distanceConverter","distance","Math","round","zh","hangSeng","allBanks","networks","SERVICE_COIN_SORT","api_idx","SERVICE_FOREIGN_CURRENCY","SERVICE_DISABLED_ACCESS","SERVICE_BILL_PAYMENT","SERVICE_CASH_WITHDRAWAL","SERVICE_CASH_DEPOSIT","SERVICE_CHEQUE_DEPOSIT","SERVICES","WEEK_DAYS","ATMTimePicker","_this$props","label","defaultValue","container","noValidate","TextField_default","id","InputLabelProps","shrink","inputProps","step","flexWrap","marginTop","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ATMFilterDialog","handleClose","toggleATMFilterDialog","bank","expanded","event","toggleFilterOption","target","name","value","checked","filters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","handleSelectChange","bind","MenuItem_default","map","index","key","_this$props2","_this2","services","FormLabel_default","FormGroup_default","service","FormControlLabel_default","control","Checkbox_default","handleCheckboxChange","_this3","days","day","ATMFilter_ATMTimePicker","_this4","option","fullScreen","Dialog_default","onClose","aria-labelledby","fullWidth","maxWidth","DialogTitle_default","DialogContent_default","Grid_default","spacing","item","xs","md","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","DialogActions_default","Button_default","atm","filter_dialog_open","dispatchToggleFilterOption","dispatchToggleATMFilterDialog","dialogCustomizedWidth","withMobileDialog","ATMItem","Bank","src","bankIcon","isOpenNow","Chip_default","chip","isNaN","ATMName","ATMId","_atm$ATMAddress","ATMAddress","AddressLine","LatitudeDescription","LongitudeDescription","Network","ListItem_default","button","renderBankIcon","ListItemText_default","primary","secondary","renderDistance","renderOpeningClosingTag","borderRadius","marginRight","ATMMarker","Popup","popUpContent","pos","BranchName","HotlineNumber","latitude","longitude","Marker","renderMarkerClusterGroup","&:last-child","paddingBottom","findBankNameByIdx","filter","ATMDetailContent","handleDialogClose","toggleATMDetailDialog","saveMap","isMapInit","renderDrawer","toolbar","Drawer_default","drawer","drawerPaper","renderDrawerContent","renderNetworkIcon","renderServiceList","List_default","dense","denseList","renderOpeningHours","openingHours","oh","ohStr","OpenDayDescription","OpenTime","CloseTime","renderListItem","ListSubheader_default","subHeader","listRoot","_this$props$atm","ATMServices","_this$props$atm$ATMAd","CountryCode","TerritoryName","DistrictName","OpeningHours","alignItems","inline","selectedLocation","currentLocation","zoom","selectedPosition","currentPosition","keys","_this$props3","selectedZoomLvl","icon","L","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","zoomLvlToUse","content","es_Map","mapContainer","center","maxZoom","ref","TileLayer","attribution","url","Leaflet_ATMMarker","location","dispatchToggleATMDetailDialog","top","flexShrink","mixins","palette","networkAvatar","deepOrange","paddingLeft","paddingRight","ATMItemDetail","appBar","Close_default","closeIcon","flex","ATMDetail_ATMDetailContent","zIndex","Transition","Slide_default","assign","direction","ATMItemDialog","filteredATMs","o","TransitionComponent","ATMDetail_ATMItemDetail","detail_dialog_open","memo","styled","_ref","classnames","_templateObject","ATMListing","loadItems","size","hasMoreItems","atmItems","slice","prevProps","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","Loader","useWindow","ATMListing_ATMItem","Divider_default","ATMListing_ATMItemDialog","ATM","record","CoinSortIndicator","ForeignCurrencyIndicator","DisabledAccessIndicator","BillPaymentIndicator","CashWithdrawalIndicator","CashDepositIndicator","ChequeDepositIndicator","RMBandForeignCurrencyATMIndicator","TalkATMIndicator","MTRStationOfficeIndicator","ChequeDepositMachineCutOffTime","copyFields","copyTo","copyFrom","_arr","_i","field","hasOwnProperty","isArray","serviceKey","isServiceIndicatorReturnTrue","dayOfWeek","moment","format","openingHour","find","openTime","closeTime","isBefore","add","isBetween","HangSengATM","_ATM","banks","CashDepositMachineIndicator","ChequeDepositMachineIndicator","RMBATMwithoutForeignCurrencyIndicator","inherits","HsbcATM","_ATM2","JetcoATM","_ATM3","loadAllData","toConsumableArray","loadHangSengData","loadHSBCData","loadJetcoData","HSBC_DATA","Brand","HANG_SENG_DATA","JETCO_DATA","ATMListingContainer","initATMData","detectCurrentLocation","_this$state","me","navigator","geolocation","getCurrentPosition","_position$coords","coords","sortATMData","err","timeout","ATMs","sortedAllATMs","lat1","lng1","lat2","lng2","dLat","PI","dlng","sin","cos","atan2","sqrt","distanceBetweenTwoGeoPoints","sort","x","y","ATMFilter_ATMFilterDialog","components_ATMListing_ATMListing","atmData","ATMPopup","CardHeader_default","avatar","Avatar_default","header","CardActions_default","disableSpacing","Info_default","Explore_default","Share_default","ATMMarkerClusterGroup","popUp","Leaflet_ATMPopup","react_leaflet_markercluster_min_default","onMouseOver","e","openPopup","onMouseOut","markerOnClick","renderPopUp","ATMMapContainer","handleMoveEnd","evt","latlng","getZoom","onmoveend","Leaflet_ATMMarkerClusterGroup","ATM404Container_landingContainer","ATM404Container","ATMLandingContainer","match","params","containers_ATM404Container_ATM404Container","containers_AppNavbar_AppNavbar","Landing_ATMListingContainer","Landing_ATMMapContainer","ATMDetailContainer","pageFound","_this$props$match","_this$props$match$par","readOnlyError","Routes","Switch","Route","exact","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","filterData","atms","includes","isServiceAvaliable","atmDataReducer","action","objectSpread","raw_data","locationReducer","pageReducer","about_dialog_open","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.ea113a80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom'\nimport { Divider } from '@material-ui/core';\n\nconst styles = {\n    landingContainer: {\n        textAlign: 'center',\n        height: '100%',\n        color: '#ffffff',\n        background: '-webkit-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -webkit-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: '-o-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -o-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: '-moz-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -moz-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: 'linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        overflow: 'auto'\n    },\n    card: {\n        width: 345,\n        display: 'inline-flex',\n        margin: 20\n    },\n    cardContent: {\n        height: '180px'\n    },\n    media: {\n        objectFit: 'scale-down',\n        padding: '20px 0px'\n    },\n    subheader: {\n        fontFamily: 'Roboto Condensed, sans-serif',\n        fontWeight: 700,\n        lineHeight: 1.6,\n        fontSize: 24,\n        color: '#ffffff',\n        paddingTop: '25px',\n    },\n    divider: {\n        width: '300px',\n        height: '4px',\n        margin: '8px auto 0',\n        display: '#000000',\n        backgroundColor: '#ffffff'\n    },\n    paper: {\n        overflow: 'hidden'\n    }\n};\n\nconst hsbc = {\n    img: './images/hsbc.png',\n    title: {\n        en: 'HSBC',\n        tc: ''\n    },\n    desc: {\n        en: 'HSBC, officially known as The Hongkong and Shanghai Banking Corporation Limited, is a wholly owned subsidiary of HSBC, the largest bank in Hong Kong, and operates branches and offices throughout the Asia Pacific region, and in other countries around the world.',\n        tc: ''\n    }\n};\n\nconst hangseng = {\n    img: './images/hang_seng.png',\n    title: {\n        en: 'Hang Seng',\n        tc: ''\n    },\n    desc: {\n        en: 'Hang Seng Bank, Limited is a Hong Kong-based banking and financial services company with headquarters in Central, Hong Kong. It is one of Hong Kong\\'s leading public companies in terms of market capitalisation and is part of the HSBC Group, which holds a majority equity interest in the bank. ',\n        tc: ''\n    }\n};\n\nconst jetco = {\n    img: './images/jetco.png',\n    title: {\n        en: 'Jetco',\n        tc: ''\n    },\n    desc: {\n        en: 'JETCO is the biggest network of automatic teller machines and it is a bank consortium chartered to develop innovative and secure financial technology services for its member banks',\n        tc: ''\n    }\n};\n\nclass ATMNetworkContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            network: 'all'\n        }\n    }\n\n\n    renderCard = (network) => {\n        const { classes } = this.props;\n        var data = null;\n\n        if(network === 'hsbc') {\n            data = hsbc;\n        }\n\n        if(network === 'hangseng') {\n            data = hangseng;\n        }\n\n        if(network === 'jetco') {\n            data = jetco;\n        }\n\n        if(data == null) {\n            return (null);\n        }\n\n        return (\n            <Link\n            to={{\n                pathname: `/hk-atm-locator/atm/${network}`,\n            }}\n            style={{ textDecoration: 'none' }}\n            >\n                <Card className={classes.card} >\n                    <CardActionArea>\n                        <CardMedia\n                        component=\"img\"\n                        alt={ data.title.en }\n                        className={classes.media}\n                        height=\"140\"\n                        image={ data.img }\n                        title={ data.title.en }\n                        />\n                        <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            { data.title.en }\n                        </Typography>\n                        <Typography component=\"p\">\n                            { data.desc.en }\n                        </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Link>\n        );\n    }\n\n    render() {\n        const { classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.landingContainer}>\n                    <Typography className={classes.subheader} variant=\"h6\" color=\"inherit\">\n                    Hong Kong ATM Locator\n                        <Divider className={classes.divider}/>\n                    </Typography>\n\n                   <div>\n                    { this.renderCard('hsbc') }\n                    { this.renderCard('hangseng') }\n                    { this.renderCard('jetco') }\n                   </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMNetworkContainer.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n       toggleMapView: state.page.toggle_map_view\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      \n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMNetworkContainer));","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION,\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_FILTER_OPTION,\n    TOGGLE_ATM_FILTER_DIALOG,\n    TOGGLE_MAP_VIEW,\n    TOGGLE_ABOUT_DIALOG\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, idx, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, idx: idx, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nconst dispatchToggleATMDetailDialog = (open) => {\n    return {type: TOGGLE_ATM_DETAIL_DIALOG, open: open}\n}\n\nconst dispatchToggleFilterOption = (key, value) => {\n  return {type: TOGGLE_FILTER_OPTION, key, value}\n}\n\nconst dispatchToggleATMFilterDialog = (open) => {\n    return {type: TOGGLE_ATM_FILTER_DIALOG, open: open}\n}\n\nconst dispatchToggleMapView = (open) => {\n    return {type: TOGGLE_MAP_VIEW, open: open}\n}\n\nconst dispatchToggleAboutDialog = (open) => {\n    return {type: TOGGLE_ABOUT_DIALOG, open: open}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, idx, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, idx, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}\n\nexport const toggleATMDetailDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMDetailDialog(open))\n    }\n}\n\nexport const toggleFilterOption = (key, value) => {\n  return dispatch => {\n    dispatch(dispatchToggleFilterOption(key, value));\n  }\n}\n\nexport const toggleATMFilterDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMFilterDialog(open))\n    }\n}\n\nexport const toggleMapView = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleMapView(open))\n    }\n}\n\nexport const toggleAboutDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleAboutDialog(open))\n    }\n}\n","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\nexport const TOGGLE_ATM_DETAIL_DIALOG = 'TOGGLE_ATM_DETAIL_DIALOG';\nexport const TOGGLE_FILTER_OPTION = 'TOGGLE_FILTER_OPTION';\nexport const TOGGLE_ATM_FILTER_DIALOG = 'TOGGLE_ATM_FILTER_DIALOG';\nexport const TOGGLE_MAP_VIEW = 'TOGGLE_MAP_VIEW';\nexport const TOGGLE_ABOUT_DIALOG = 'TOGGLE_ABOUT_DIALOG';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MapIcon from '@material-ui/icons/Map';\n// import LiveHelpIcon from '@material-ui/icons/LiveHelp';\nimport {\n  toggleMapView,\n  toggleAboutDialog\n} from '../../actions';\n// import ATMSearchbar from '../../components/ATMFilter/ATMSearchbar';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: '64px'\n  },\n  appbar: {\n    backgroundColor: '#B13515',\n    color: '#ffffff'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  backButton: {\n    marginLeft: -12,\n  },\n  dialogTitle: {\n    whiteSpace: 'nowrap'\n  },\n  landingTitle: {\n    margin: 'auto',\n    fontFamily: 'Roboto Condensed, sans-serif',\n    fontWeight: 700,\n    lineHeight: 1.6,\n    fontSize: 24\n  }\n});\n\nclass AppNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleMapview: true\n    };\n  }\n\n  handleViewChange = () => {\n    const { toggleMapview } = this.state;\n    this.props.toggleMapView(toggleMapview);\n    this.setState({\n      toggleMapview: !toggleMapview\n    })\n  };\n\n  handleAboutToggle = () => {\n    this.props.toggleAboutDialog(true);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"fixed\" className={classes.appbar}>\n          <Toolbar>\n            <Link\n              to={{\n                  pathname: `/hk-atm-locator/`,\n              }}\n              style={{ textDecoration: 'none', color: 'white' }}\n            >\n              <IconButton className={classes.backButton} color=\"inherit\" aria-label=\"Back to previous page\">\n                <ArrowBackIcon />\n              </IconButton>\n            </Link>\n          \n            <Typography variant=\"h6\" color=\"inherit\">\n              Hong Kong ATM Locator\n            </Typography>\n\n            <React.Fragment>\n              {/* <ATMSearchbar/> */}\n              <div className={classes.grow} />\n              <div >\n                <IconButton\n                  onClick={this.handleViewChange}\n                  color=\"inherit\"\n                >\n                  <MapIcon />\n                </IconButton>\n                {/* TODO:  */}\n                {/* <IconButton\n                  onClick={this.handleAboutToggle}\n                  color=\"inherit\"\n              >\n                <LiveHelpIcon/>\n              </IconButton> */}\n              </div>\n            </React.Fragment>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      toggleMapView: (flag) => {\n          dispatch(toggleMapView(flag))\n      },\n      toggleAboutDialog: (flag) => {\n        dispatch(toggleAboutDialog(flag))\n      }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(AppNavbar));","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nconst distanceConverter = (distance) => {\n\tif(!distance) {\n\t\treturn null;\n\t}\n\treturn distance > 1 ? Math.round(distance) + 'km' : Math.round(distance * 1000) + 'm';\n}\n\nexport {\n    distanceBetweenTwoGeoPoints,\n\tdistanceConverter\n}","export const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: '滙豐銀行有限公司'\n}\n\nexport const hangSeng = {\n    idx: 'hang_seng',\n    en: 'Hang Seng Bank',\n    zh: '恒生銀行有限公司'\n}\n\nconst bochk = {\n    idx: 'bochk',\n    en: 'Bank of China (Hong Kong) Limited',\n    zh: '中國銀行(香港)有限公司'\n}\n\nconst bankcomm = {\n    idx: 'bankcomm',\n    en: 'Bank of Communications Co., Ltd.',\n    zh: '交通銀行(香港)有限公司'\n}\n\nconst cncbinternational = {\n    idx: 'cncbinternational',\n    en: 'China CITIC Bank International Limited',\n    zh: '中信銀行(國際)有限公司'\n}\n\nconst asiaccb = {\n    idx: 'asiaccb',\n    en: 'China Construction Bank (Asia) Corporation Limited',\n    zh: '中國建設銀行(亞洲)股份有限公司'\n}\n\nconst cmbchina = {\n    idx: 'cmbchina',\n    en: 'China Merchants Bank Hong Kong Branch',\n    zh: '招商銀行香港分行'\n}\n\nconst chiyubank = {\n    idx: 'chiyubank',\n    en: 'Chiyu Banking Corporation Limited',\n    zh: '集友銀行有限公司'\n}\n\nconst chonghingbank = {\n    idx: 'chonghingbank',\n    en: 'Chong Hing Bank Limited',\n    zh: '創興銀行有限公司'\n}\n\nconst citibank = {\n    idx: 'citibank',\n    en: 'Citibank (Hong Kong) Limited',\n    zh: '花旗銀行(香港)有限公司'\n}\n\nconst cmbwinglungbank = {\n    idx: 'cmbwinglungbank',\n    en: 'CMB Wing Lung Bank Limited',\n    zh: '招商永隆銀行有限公司'\n}\n\nconst dahsing = {\n    idx: 'dahsing',\n    en: 'Dah Sing Bank, Limited',\n    zh: '大新銀行有限公司'\n}\n\nconst dbs = {\n    idx: 'dbs',\n    en: 'DBS Bank (Hong Kong) Limited',\n    zh: '星展銀行(香港)有限公司'\n}\n\nconst fubonbank = {\n    idx: 'fubonbank',\n    en: 'Fubon Bank (Hong Kong) Limited',\n    zh: '富邦銀行(香港)有限公司'\n}\n\nconst icbcasia = {\n    idx: 'icbcasia',\n    en: 'Industrial and Commercial Bank of China (Asia) Limited',\n    zh: '中國工商銀行(亞洲)有限公司'\n}\n\nconst ocbcwhhk = {\n    idx: 'ocbcwhhk',\n    en: 'OCBC Wing Hang Bank Limited',\n    zh: '南洋商業銀行有限公司'\n}\n\nconst publicbank = {\n    idx: 'publicbank',\n    en: 'Public Bank (Hong Kong) Limited',\n    zh: '華僑永亨銀行有限公司'\n}\n\nconst shacombank = {\n    idx: 'shacombank',\n    en: 'Shanghai Commercial Bank Limited',\n    zh: '大眾銀行(香港)有限公司'\n}\n\nconst nanyang = {\n    idx: 'shacombank',\n    en: 'Nanyang Commercial Bank Limited',\n    zh: '上海商業銀行'\n}\n\nconst standardchartered = {\n    idx: 'standardchartered',\n    en: 'Standard Chartered Bank (Hong Kong) Limited',\n    zh: '渣打銀行(香港)有限公司'\n}\n\nconst hkbea = {\n    idx: 'hkbea',\n    en: 'The Bank of East Asia, Limited',\n    zh: '東亞銀行有限公司'\n}\n\nexport const jetco = [\n    bochk,\n    bankcomm,\n    cncbinternational,\n    asiaccb,\n    cmbchina,\n    chiyubank,\n    chonghingbank,\n    citibank,\n    cmbwinglungbank,\n    dahsing,\n    dbs,\n    fubonbank,\n    icbcasia,\n    ocbcwhhk,\n    nanyang,\n    publicbank,\n    shacombank,\n    standardchartered,\n    hkbea\n]\n\nexport const allBanks = [\n    hsbc,\n    hangSeng,\n    ...jetco\n];","export const jetco = {\n    idx: 'jetco',\n    en: 'Jetco',\n    zh: ''\n};\n\nexport const hangseng = {\n    idx: 'hangseng',\n    en: 'Hang Seng',\n    zh: ''\n};\n\nexport const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n};\n\nexport const networks = [\n    jetco,\n    hangseng,\n    hsbc\n]","export const SERVICE_COIN_SORT = {\n  idx: 'coin_sort',\n  api_idx: 'CoinSortIndicator',\n  en: 'Coin Sort',\n  tc: ''\n};\n\nexport const SERVICE_FOREIGN_CURRENCY = {\n  idx: 'foreign_currency',\n  api_idx: 'ForeignCurrencyIndicator',\n  en: 'Foreign Currency',\n  tc: ''\n};\n\nexport const SERVICE_DISABLED_ACCESS = {\n  idx: 'disabled_access',\n  api_idx: 'DisabledAccessIndicator',\n  en: 'Disabled Access',\n  tc: ''\n};\n\nexport const SERVICE_BILL_PAYMENT = {\n  idx: 'bill_payment',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Bill Payment',\n  tc: ''\n};\n\nexport const SERVICE_CASH_WITHDRAWAL = {\n  idx: 'cash_withdrawal',\n  api_idx: 'CashWithdrawalIndicator',\n  en: 'Cash Withdrawal',\n  tc: ''\n};\n\nexport const SERVICE_CASH_DEPOSIT = {\n  idx: 'cash_deposit',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Cash Deposit',\n  tc: ''\n};\n\nexport const SERVICE_CHEQUE_DEPOSIT = {\n  idx: 'cheque_deposit',\n  api_idx: 'ChequeDepositIndicator',\n  en: 'Cheque Deposit',\n  tc: ''\n};\n\nexport const SERVICES = [\n  SERVICE_COIN_SORT,\n  SERVICE_FOREIGN_CURRENCY,\n  SERVICE_DISABLED_ACCESS,\n  SERVICE_BILL_PAYMENT,\n  SERVICE_CASH_WITHDRAWAL,\n  SERVICE_CASH_DEPOSIT,\n  SERVICE_CHEQUE_DEPOSIT\n];\n\nexport const WEEK_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: '20px'\n  },\n});\n\nclass ATMTimePicker extends React.Component {\n  render() {\n    const { classes, label, defaultValue } = this.props;\n    return (\n      <form className={classes.container} noValidate>\n        <TextField\n          id=\"time\"\n          label={label}\n          type=\"time\"\n          defaultValue={defaultValue}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          inputProps={{\n            step: 300,\n          }}\n        />\n      </form>\n    );\n  }\n}\n\nATMTimePicker.propTypes = {\n    classes: PropTypes.object.isRequired,\n    label: PropTypes.string.isRequired,\n    defaultValue: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ATMTimePicker);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { jetco } from '../../constants/banks';\nimport { networks } from '../../constants/networks';\nimport { SERVICES, WEEK_DAYS } from '../../constants/services';\nimport ATMTimePicker from './ATMTimePicker';\n\n\nimport {\n  toggleFilterOption,\n  toggleATMFilterDialog\n} from '../../actions'\n\n\nconst styles = {\n  dialogCustomizedWidth: {\n    width: '80%'\n  }\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterDialog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all',\n        expanded: false\n    }\n  }\n\n  handleSelectChange(event) {\n      // this.setState({ [event.target.name]: event.target.value });\n      this.props.toggleFilterOption(event.target.name, event.target.value);\n  };\n\n  handleCheckboxChange(name) {\n      return function(event){\n          // this.setState({ [name]: event.target.checked });\n          this.props.toggleFilterOption(name, event.target.checked);\n      }\n  };\n\n  renderNetworkSelect() {\n    const { classes, filters: { network }} = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={network === undefined ? 'all' : network}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n              {\n                networks.map((network, index) => {\n                  return (\n                    <MenuItem value={network.idx} key={index}>\n                      {network.en}\n                    </MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    /*\n      TODO: the value s restricted based on Network\n    */\n    const { classes, filters: { bank } } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={bank === undefined ? 'all' : bank}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n            {\n              jetco.map((bank, index) => {\n                return (\n                  <MenuItem value={bank.idx} key={index}>\n                    {bank.en}\n                  </MenuItem>\n                );\n              })\n            }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const services = SERVICES;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             services.map((service, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state[service]}\n                      onChange={this.handleCheckboxChange(service).bind(this)}\n                      value={service.en}\n                      color=\"secondary\"\n                    />\n                  }\n                  label={service.en}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = WEEK_DAYS;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day).bind(this)}\n                      value={day}\n                      color=\"secondary\"\n                    />\n                  }\n                  label={day}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Hours</FormLabel>\n        <FormGroup>\n           <ATMTimePicker label=\"Start Time\" defaultValue=\"00:00\"/>\n           <ATMTimePicker label=\"Close Time\" defaultValue=\"23:59\"/>\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option).bind(this)}\n                    value={option}\n                    color=\"secondary\"\n                  />\n                }\n                label={option}\n                key={index}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  handleClose = () => {\n    this.props.toggleATMFilterDialog(false);\n  }\n\n  render() {\n     const { fullScreen } = this.props;\n    return (\n      <Dialog\n          fullScreen={fullScreen}\n          open={this.props.open || false}\n          onClose={this.handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n          fullWidth={true}\n          maxWidth = {'md'}\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Advanced Filter\"}</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={24}>\n              {/* { this.renderNetworkSelect() }\n              <Divider variant=\"middle\" />\n              { this.renderBankSelect() }\n              <Divider variant=\"middle\" /> */}\n              <Grid item xs={6} md={3}>\n                { this.renderServicesCheckbox() }\n              </Grid>\n              <Grid item xs={6} md={3}>\n                { this.renderOpeningDayCheckbox() }\n              </Grid>\n              <Grid item xs={6} md={3}>\n                { this.renderOpeningHourCheckbox() }\n              </Grid>\n              <Grid item xs={6} md={3}>\n                { this.renderOpeningOrClosingCheckbox() }\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n  }\n}\n\nATMFilterDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n      filters: state.atm.filters,\n      open: state.page.filter_dialog_open,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      toggleFilterOption: (key, value) => {\n          dispatch(toggleFilterOption(key, value));\n      },\n      toggleATMFilterDialog: (open) => {\n        dispatch(toggleATMFilterDialog(open))\n      } \n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withMobileDialog()(ATMFilterDialog)));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport { distanceConverter } from '../../utils/geoUtils';\n\nimport {\n    setSelectedLocation,\n    // toggleATMDetailDialog\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0,\n        width: '100px',\n    },\n    bankIcon: {\n      width: '50px',\n      height: '50px',\n      marginRight: '20px',\n    }\n});\n\nclass ATMItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderBankIcon(atm) {\n      const { classes } = this.props;\n      return (\n        <img alt={atm.Bank} src={\"/hk-atm-locator/images/\" + atm.Bank + \".png\"} className={classes.bankIcon}></img>\n      )\n    }\n\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distanceConverter(distance);\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n    // @deprecated \n    // atmListItemOnClick(atm) {\n    //     const { ATMId, ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n    //     if(LatitudeDescription && LongitudeDescription && ATMId){\n    //         this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription, ATMId);\n    //         // toggle detail page\n    //         this.props.toggleATMDetailDialog(true);\n    //     }\n    // }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMId, ATMAddress: { AddressLine, LatitudeDescription, LongitudeDescription }, distance, Network } = atm;\n        \n        return (\n            <Link\n            to={{\n                pathname: `/hk-atm-locator/atm/${Network}/${ATMId}`,\n                state: { atm }\n            }}\n            style={{ textDecoration: 'none' }}\n            >\n                <ListItem \n                    button \n                    key={ idx } \n                    // @deprecated\n                    // onClick={() => this.atmListItemOnClick(atm)}\n                >\n                    { this.renderBankIcon(atm) }\n                    <div>\n                        <ListItemText\n                            primary={ ATMName }\n                            secondary={\n                                <React.Fragment>\n                                    { AddressLine }\n                                    <br/>\n                                    { this.renderDistance(distance) }\n\n                                </React.Fragment>\n                            }\n                        />\n                        <div style={{display: 'flex'}}>\n                        { this.renderOpeningClosingTag(atm) }\n                        </div>\n                    </div>\n                </ListItem>\n            </Link>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng, idx) => {\n            dispatch(setSelectedLocation(lat, lng, idx))\n        },\n        // @deprecated \n        // toggleATMDetailDialog: (open) => {\n        //     dispatch(toggleATMDetailDialog(open))\n        // }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarker extends React.Component {\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n\n        const latitude = atm.ATMAddress.LatitudeDescription;\n        const longitude = atm.ATMAddress.LongitudeDescription;\n        return (\n            <Marker\n                position= { [latitude, longitude] }\n                // onMouseOver= { (e) => {\n                //     e.target.openPopup();\n                // }}\n                // onMouseOut= { (e) => {\n                //     // e.target.closePopup();\n                // }}\n            >\n            {/* { this.renderPopUp(atm) } */}\n            </Marker>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarker.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarker));\n","import { allBanks } from '../constants/banks';\n\nconst findBankNameByIdx = (idx) => {\n    const bank = allBanks.filter(bank => {\n        return bank.idx === idx;\n    });\n    return bank[0] ? bank[0].en : '';\n}\n\nexport {\n    findBankNameByIdx\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport ATMMarker from '../../components/Leaflet/ATMMarker';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\nimport { distanceConverter } from '../../utils/geoUtils';\nimport { findBankNameByIdx } from '../../utils/bankUtils';\nimport { SERVICES } from '../../constants/services';\nimport {\n    toggleATMDetailDialog,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions';\n\nconst drawerWidth = 400\n\nconst styles = theme => ({\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: 'calc(100% - 400px)',\n        height: '100%',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        paddingTop: '64px'\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    listRoot: {\n        width: '100%',\n        maxWidth: 400,\n        backgroundColor: theme.palette.background.paper,\n     },\n     subHeader: {\n        height: '28px',\n        lineHeight: '28px',\n        backgroundColor: \"#B13515\",\n        color: \"#ffffff\"\n     },\n     networkAvatar: {\n        width: '60px',\n        height: '60px',\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n     },\n     bankIcon: {\n      width: '50px',\n      height: '50px',\n    },\n    denseList: {\n        paddingTop: '4px',\n        paddingBottom: '4px',\n        paddingLeft: '0px',\n        paddingRight: '0px'\n    }\n});\n\nclass ATMDetailContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 16,\n            isMapInit: false\n        }\n    }\n\n    componentDidMount() {\n        const { selectedLocation, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length === 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n            this.setState({selectedLocation: selectedPosition})\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length === 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n            this.setState({currentLocation: currentPosition})\n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    renderDrawer = () => {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <div className={classes.toolbar} />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n                    { this.renderDrawerContent() }\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n\n    renderNetworkIcon = (bank) => {\n        const { classes } = this.props;\n        return (\n            <img alt={bank} src={\"/hk-atm-locator/images/\" + bank + \".png\"} className={classes.bankIcon}></img>\n        );\n    }\n\n    // TODO: revise UI\n    renderServiceList = (services) => {\n        const { classes } = this.props;\n        // const { BillPaymentIndicator, CashDepositIndicator, CashWithdrawalIndicator, ChequeDepositIndicator, CoinSortIndicator, DisabledAccessIndicator, ForeignCurrencyIndicator } = services;\n        return (\n            <List \n                dense={true}\n            >\n                {\n                    SERVICES.map((service, idx) => {\n                        if(services[service.api_idx]) {\n                            return (\n                                <ListItem className={classes.denseList} key={idx}>\n                                    <ListItemText primary={service.en}></ListItemText>\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            (null)\n                        );\n                    })\n                }\n            </List>\n        );\n    }\n\n    // TODO: revise UI\n    renderOpeningHours = (openingHours) => {\n        const { classes } = this.props;\n        return (\n             <List \n                dense={true}\n            >\n                {\n                    openingHours.map((oh, idx) => {\n                       const ohStr = `${oh.OpenDayDescription } : ${oh.OpenTime} - ${oh.CloseTime}`;\n                       return (\n                           <ListItem className={classes.denseList} key={idx}>\n                                <ListItemText primary={ohStr}></ListItemText>\n                            </ListItem>\n                       );\n                    })\n                }\n            </List>\n        )\n    }\n\n    renderListItem = (subheader, value) => {\n        const { classes } = this.props;\n\n        if(!subheader && !value) {\n            return (null);\n        }\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={classes.subHeader}>{subheader}</ListSubheader>}\n                className={classes.listRoot}\n                dense={true}\n                >\n                <ListItem>\n                    <ListItemText primary={value}/>\n                </ListItem>\n            </List>\n        );\n    }\n\n    renderDrawerContent = () => {\n        const { atm: { ATMName, ATMServices, ATMAddress: { CountryCode, TerritoryName, DistrictName, AddressLine, LatitudeDescription, LongitudeDescription }, Bank, HotlineNumber, distance, OpeningHours}, classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <List className={classes.listRoot}>\n                    <ListItem alignItems=\"flex-start\">\n                        { this.renderNetworkIcon(Bank) }\n                        <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                ({ LatitudeDescription },{ LongitudeDescription })\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                </List>\n\n                { this.renderListItem('Bank', findBankNameByIdx(Bank)) }\n                { this.renderListItem('District', CountryCode + ' > ' + TerritoryName + ' > ' + DistrictName) }\n                { this.renderListItem('Address', AddressLine) }\n                { this.renderListItem('Services', this.renderServiceList(ATMServices)) }\n                { this.renderListItem('Opening Hours', this.renderOpeningHours(OpeningHours)) }\n                { this.renderListItem('Hotline Number', HotlineNumber) }\n                { this.renderListItem('Distance', distanceConverter(distance)) }\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { atm, classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n       let zoomLvlToUse = selectedZoomLvl;\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                { this.renderDrawer() }\n                <div className={classes.content}>\n                    <Map\n                        className={classes.mapContainer}\n                        center={selectedLocation}\n                        zoom= {zoomLvlToUse}\n                        maxZoom={18}\n                        // dragging={false}\n                        ref={this.saveMap}>\n\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        {/* <ATMMarkerClusterGroup/> */}\n                        <Marker position={currentLocation} icon={icon}/>\n                        <ATMMarker atm={atm}/>\n                    </Map>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContent.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMDetailContent));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMDetailContent from './ATMDetailContent';\nimport {\n    // toggleATMDetailDialog\n} from '../../actions';\n\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: 3000,\n        backgroundColor: '#B13515',\n        color: '#ffffff'\n    },\n    closeIcon: {\n        color: '#ffffff'\n    },\n    root: {\n        display: 'flex',\n    }\n});\n\nclass ATMItemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           \n        }\n    }\n\n    // @deprecated\n    // handleDialogClose = () => {\n    //     this.props.toggleATMDetailDialog(false);\n    // };\n\n    render() {\n        const { atm, classes, network } = this.props;\n\n        if(!atm) {\n            return (null);\n        }\n        \n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar className={classes.appBar} position=\"fixed\">\n                    <Toolbar>\n                    <Link\n                    to={{\n                        pathname: `/hk-atm-locator/atm/${network}/`,\n                    }}\n                    style={{ textDecoration: 'none' }}\n                    >\n                        <IconButton  \n                            // @deprecated\n                            // onClick={this.handleDialogClose} \n                            aria-label=\"Close\"\n                        >\n                        <CloseIcon className={classes.closeIcon}/>\n                        </IconButton>\n                    </Link>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            {atm.ATMName}\n                        </Typography>\n                    </Toolbar>\n                    </AppBar>\n                    <ATMDetailContent atm={atm} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItemDetail.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired,\n    network: PropTypes.string\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        // @deprecated\n        // toggleATMDetailDialog: (open) => {\n        //     dispatch(toggleATMDetailDialog(open))\n        // }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDetail));\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport ATMItemDetail from '../ATMDetail/ATMItemDetail';\n\nconst styles = {\n\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ATMItemDialog extends React.Component {\n\n  render() {\n    const { atm, selectedLocation } = this.props;\n    \n    if(!selectedLocation || !selectedLocation.idx || !atm) {\n      return (null);\n    }\n    \n    const idx = this.props.selectedLocation.idx;\n    let filteredATMs = atm.filter(o => {\n      return o.ATMId == idx\n    });\n\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open || false}\n        onClose={this.handleDialogClose}\n        TransitionComponent={Transition}\n      >\n        <ATMItemDetail atm={filteredATMs[0]}/>\n      </Dialog>\n    );\n  }\n}\n\nATMItemDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  atm: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      atm: state.atm.data,\n      open: state.page.detail_dialog_open,\n      selectedLocation: state.location.selectedLocation\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDialog));\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport styled from \"styled-components\";\n\nexport default React.memo(styled(({ className }) => (\n  <div className={classnames(\"loader\", className)}>\n    <span className=\"loader__ball loader__ball--1\" />\n    <span className=\"loader__ball loader__ball--2\" />\n    <span className=\"loader__ball loader__ball--3\" />\n  </div>\n))`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n\n  span.loader__ball {\n    display: inline-block;\n    margin: auto 0.25rem;\n    height: 0.75rem;\n    width: 0.75rem;\n    border-radius: 0.375rem;\n    background: #06c;\n\n    &.loader__ball--1,\n    &.loader__ball--2,\n    &.loader__ball--3 {\n      animation: bulging 2s infinite ease-in-out;\n    }\n\n    &.loader__ball--1 {\n      animation-delay: -0.4s;\n    }\n\n    &.loader__ball--2 {\n      animation-delay: -0.2s;\n    }\n\n    @keyframes bulging {\n      0%,\n      80%,\n      100% {\n        transform: scale(0);\n        opacity: 0.5;\n      }\n      40% {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n  }\n`);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ATMItem from './ATMItem';\nimport ATMItemDialog from './ATMItemDialog';\nimport Loader from '../Loader/Loader';\n\nconst styles = theme => ({\n  root: {\n    height: '100%',\n    overflow: 'auto'\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasMoreItems: true,\n      atmItems: [],\n      size: 10\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.atm !== prevProps.atm) {\n      this.loadItems();\n    }\n  } \n\n  loadItems = () => {\n    const { atm } = this.props;\n    const { size } = this.state;\n    if(atm.length > 0) {\n      if(size > atm.length) {\n        this.setState({\n          hasMoreItems: false\n        })\n      } else {\n        this.setState({\n          atmItems: atm.slice(0, size),\n          size: size + 10\n        })\n      }\n    };\n  };\n\n  render() {\n    const { classes } = this.props;\n    \n    return (\n      <div className={classes.root}>\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={this.loadItems}\n              hasMore={this.state.hasMoreItems}\n              loader={<Loader/>}\n              useWindow={false}\n              >\n                <List>\n                {\n                  this.state.atmItems.map((atm, idx) => {\n                    return (\n                      <div key={idx}>\n                        <ATMItem atm={atm} idx={atm.ATMId}/>\n                       <Divider/>\n                      </div>\n                    )\n                  })\n                }\n              </List>\n          </InfiniteScroll>\n          <ATMItemDialog/>\n        </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","import { isArray } from \"util\";\nimport * as moment from 'moment';\nimport {\n  SERVICE_BILL_PAYMENT, SERVICE_CASH_DEPOSIT, SERVICE_CASH_WITHDRAWAL, SERVICE_CHEQUE_DEPOSIT, SERVICE_COIN_SORT,\n  SERVICE_DISABLED_ACCESS, SERVICE_FOREIGN_CURRENCY\n} from '../constants/services';\nimport * as banks from '../constants/banks';\nimport * as networks from '../constants/networks';\n\nclass ATM {\n  ATMId = \"\";\n  Bank = \"\";\n  Network = \"\";\n  ATMName = \"\";\n  HotlineNumber = \"\";\n  ATMAddress = {\n    CountryCode: \"HK\",\n    TerritoryName: \"\",\n    DistrictName: \"\",\n    AddressLine: [],\n    LatitudeDescription: 0,\n    LongitudeDescription: 0,\n  };\n  ATMServices = {\n    CoinSortIndicator: false,\n    ForeignCurrencyIndicator: false,\n    DisabledAccessIndicator: false,\n    BillPaymentIndicator: false,\n    CashWithdrawalIndicator: false,\n    CashDepositIndicator: false,\n    ChequeDepositIndicator: false,\n    RMBandForeignCurrencyATMIndicator: false,\n    TalkATMIndicator: false,\n    MTRStationOfficeIndicator: false,\n    ChequeDepositMachineCutOffTime: \"\",\n  };\n  OpeningHours = [];\n\n  constructor(record) {\n    copyFields(this, record);\n  }\n\n  isServiceAvaliable(serviceKey) {\n    if (serviceKey === SERVICE_COIN_SORT) {\n      return this.isServiceIndicatorReturnTrue('CoinSortIndicator');\n    } else if (serviceKey === SERVICE_FOREIGN_CURRENCY) {\n      return this.isServiceIndicatorReturnTrue('ForeignCurrencyIndicator');\n    } else if (serviceKey === SERVICE_DISABLED_ACCESS) {\n      return this.isServiceIndicatorReturnTrue('DisabledAccessIndicator');\n    } else if (serviceKey === SERVICE_BILL_PAYMENT) {\n      return this.isServiceIndicatorReturnTrue('BillPaymentIndicator');\n    } else if (serviceKey === SERVICE_CASH_WITHDRAWAL) {\n      return this.isServiceIndicatorReturnTrue('CashWithdrawalIndicator');\n    } else if (serviceKey === SERVICE_CASH_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('CashDepositIndicator');\n    } else if (serviceKey === SERVICE_CHEQUE_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('ChequeDepositIndicator');\n    }\n  }\n\n  isServiceIndicatorReturnTrue(field) {\n    return this.ATMServices\n      && this.ATMServices[field] !== undefined\n      && this.ATMServices[field] === true;\n  }\n\n  isOpenNow() {\n    const dayOfWeek = moment().format('dddd');\n    const openingHour = this.OpeningHours.find(oh => oh.OpenDayDescription === dayOfWeek);\n    if (!openingHour) {\n      return null;\n    }\n    const openTime = moment(openingHour.OpenTime, 'HH:mm');\n    const closeTime = moment(openingHour.CloseTime, 'HH:mm');\n    // For handling the case that the opening hour is 06:00 - 01:00 (usually means it is morning next day)\n    if (closeTime.isBefore(openTime)\n    ) {\n      closeTime.add(1, 'day');\n    }\n    return moment().isBetween(openTime, closeTime);\n  }\n}\n\n\n\nfunction copyFields(copyTo, copyFrom) {\n  for (const field of Object.keys(copyTo)) {\n    if (copyFrom && copyFrom.hasOwnProperty(field)) {\n      if (typeof (copyFrom[field]) !== 'object' || isArray(copyFrom[field])) {\n        copyTo[field] = copyFrom[field];\n      } else {\n        copyFields(copyTo[field], copyFrom[field]);\n      }\n    }\n  }\n}\n\nexport class HangSengATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hangSeng.idx;\n    this.Network = networks.hangseng.idx;\n    this.ATMServices.CashDepositIndicator = record.ATMServices.CashDepositMachineIndicator;\n    this.ATMServices.ChequeDepositIndicator = record.ATMServices.ChequeDepositMachineIndicator;\n    this.ATMServices.ForeignCurrencyIndicator =\n      record.ATMServices.RMBandForeignCurrencyATMIndicator\n      && !record.ATMServices.RMBATMwithoutForeignCurrencyIndicator;\n\n  }\n}\n\nexport class HsbcATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hsbc.idx;\n    this.Network = networks.hsbc.idx;\n  }\n}\n\nexport class JetcoATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = record.Bank;\n    this.Network = networks.jetco.idx;\n  }\n}","import HANG_SENG_DATA from '../data/hang_seng.json';\nimport HSBC_DATA from '../data/hsbc.json';\nimport JETCO_DATA from '../data/jetco_en.json';\nimport { hsbc, hangseng, jetco } from '../constants/networks';\n\nimport { HangSengATM, HsbcATM, JetcoATM } from './../models/atm';\n\nexport const loadAllData = () => {\n  return [...loadHangSengData(), ...loadHSBCData(), ...loadJetcoData()]\n}\n\nexport const loadHSBCData = () => {\n  const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n  return hsbcATMs.map(atm => new HsbcATM(atm));\n}\n\nexport const loadHangSengData = () => {\n  const hangSengATMs = HANG_SENG_DATA.data[0].Brand[0].ATM;\n  return hangSengATMs.map(atm => new HangSengATM(atm));\n}\n\nexport const loadJetcoData = () => {\n  const JetcoATMs = JETCO_DATA.data[0].Brand[0].ATM;\n  return JetcoATMs.map(atm => new JetcoATM(atm));\n}\n\nexport const loadAllDataStats = () => {\n  return [...loadHSBCDataStat(), ...loadHangSengDataStat(), ...loadJetcoDataStat()] \n}\n\nexport const loadHSBCDataStat = () => {\n  const { meta: { LastUpdated, TotalResults} } = HSBC_DATA;\n  return {\n    idx: hsbc.idx,\n    LastUpdated,\n    TotalResults\n  }\n}\n\nexport const loadHangSengDataStat = () => {\n  const { meta: { LastUpdated, TotalResults} } = HANG_SENG_DATA;\n  return {\n    idx: hangseng.idx,\n    LastUpdated,\n    TotalResults\n  }\n}\n\nexport const loadJetcoDataStat = () => {\n  const { meta: { LastUpdated, TotalResults} } = JETCO_DATA;\n  return {\n    idx: jetco.idx,\n    LastUpdated,\n    TotalResults\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport ATMFilterDialog from '../../components/ATMFilter/ATMFilterDialog';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport { loadAllData, loadHSBCData, loadHangSengData, loadJetcoData } from '../../utils/dataLoader';\n\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n\n  };\n\nclass ATMListingContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const { currentLocation, selectedLocation } = this.state;\n        const me = this;\n        \n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n                const { coords: { latitude, longitude } } = position;\n                me.props.setCurrentLocation(latitude, longitude);\n                me.props.setSelectedLocation(latitude, longitude);\n                me.sortATMData();\n             }, (err) => {\n                me.props.setCurrentLocation(currentLocation.lat, currentLocation.lng);\n                me.props.setSelectedLocation(selectedLocation.lat, selectedLocation.lng);\n               // cannot get location, sort data anyway\n                me.sortATMData();\n             },{ timeout: 10000 });\n        } else {\n            me.props.setCurrentLocation(currentLocation.lat, currentLocation.lng);\n            me.props.setSelectedLocation(selectedLocation.lat, selectedLocation.lng);\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n        const { network } = this.props;\n        \n        var ATMs = null;\n        if(network === 'hsbc') {\n            ATMs = loadHSBCData();\n        } else if(network === 'hangseng') {\n            ATMs = loadHangSengData();\n        } else if(network === 'jetco') {\n            ATMs = loadJetcoData();\n        } else {\n            ATMs = loadAllData();\n        }\n        this.props.setATMData(ATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n        if(atm) {\n            if(this.props.currentLocation !== undefined) {\n                location = this.props.currentLocation\n            }\n            \n            const sortedAllATMs = [].concat(atm)\n            .map((atm) => {\n                atm.distance = distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription);\n                return atm;\n            }).sort ((x, y) => {\n               return x.distance - y.distance\n            });\n            \n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ATMFilterDialog/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nATMListingContainer.propTypes = {\n    network: PropTypes.string.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMListingContainer));","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst styles = theme => ({\n    content: {\n        padding: \"0px 16px\"\n    },\n    chip: {\n        borderRadius: 0,\n        width: '100px',\n    },\n});\n\nclass ATMPopup extends React.Component {\n    //TODO: make renderOpeningClosingTag common\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    render() {\n        const { atm, classes } = this.props;\n        // TODO: Use bank icon as an avatar\n        // TODO: Card Action Button\n        return (\n            <Card className={classes.card}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"bank\" className={classes.avatar}>\n                  R\n                </Avatar>\n              }\n              title={ atm.ATMName }\n              subheader= { atm.ATMAddress.AddressLine }\n              className={classes.header}\n            />\n            <CardMedia\n              className={classes.media}\n              image=\"/static/images/cards/paella.jpg\"\n              title=\"Paella dish\"\n            />\n            <CardContent className={classes.content}>\n              { this.renderOpeningClosingTag(atm) }\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"Information\">\n                <InfoIcon />\n              </IconButton>\n              <IconButton aria-label=\"Route\">\n                <ExploreIcon />\n              </IconButton>\n              <IconButton aria-label=\"Share\">\n                <ShareIcon />\n              </IconButton>\n            </CardActions>\n          </Card>  \n        );\n    }\n}\n\nATMPopup.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMPopup));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { loadAllData, loadHSBCData, loadHangSengData, loadJetcoData } from '../../utils/dataLoader';\nimport ATMPopup from './ATMPopup';\nimport {\n    setATMData,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = theme => ({\n    popUp: {\n       margin: 0\n    },\n});\n\nclass ATMMarkerClusterGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.initATMData();\n    }\n\n    initATMData() {\n        const { network } = this.props;\n        var ATMs = null;\n        if(network === 'hsbc') {\n            ATMs = loadHSBCData();\n        } else if(network === 'hangseng') {\n            ATMs = loadHangSengData();\n        } else if(network === 'jetco') {\n            ATMs = loadJetcoData();\n        } else {\n            ATMs = loadAllData();\n        }\n        this.props.setATMData(ATMs);\n    }\n\n    markerOnClick(data) {\n        // Center the map \n        // const { ATMAddress } = data;\n        // this.props.setSelectedLocation(ATMAddress.LatitudeDescription, ATMAddress.LongitudeDescription);\n    }\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup className={classes.popUp}>\n                <ATMPopup atm={data}/>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n        return (\n            <MarkerClusterGroup>\n                {\n                    atm.map((data, idx) => {\n                        const latitude = data.ATMAddress.LatitudeDescription;\n                        const longitude = data.ATMAddress.LongitudeDescription;\n                        if(latitude !== undefined && longitude !== undefined) {\n                            return (\n                                <Marker \n                                    key= { idx }\n                                    position= { [latitude, longitude] } \n                                    onMouseOver= { (e) => {\n                                        e.target.openPopup();\n                                    }}\n                                    onMouseOut= { (e) => {\n                                        // e.target.closePopup();\n                                    }}\n                                    onClick = { () => this.markerOnClick(data) }\n                                >\n                                { this.renderPopUp(data) }\n                                </Marker>\n                            );\n                        }\n                        return (null);\n                    })\n                }\n            </MarkerClusterGroup>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarkerClusterGroup.propTypes = {\n    classes: PropTypes.object.isRequired,\n    network: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng) => {\n            dispatch(setSelectedLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarkerClusterGroup));\n  ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport ATMMarkerClusterGroup from '../../components/Leaflet/ATMMarkerClusterGroup';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: '100%',\n        height: '100%',\n    },\n  };\n\nclass ATMMapContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            zoom: 14,\n            isMapInit: false\n        }\n    }\n\n\n    handleMoveEnd = (evt) => {\n        // let latlng = evt.target.getCenter();\n        /*\n            TODO: better add a new function called setZoomLevel as selectedLocation should not be evt.target.getCenter()\n        */\n        let latlng = this.props.selectedLocation;\n        let zoomLvl = evt.target.getZoom();\n        this.props.setSelectedLocation(latlng.lat, latlng.lng, zoomLvl);\n    }\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    render() {\n        const { classes, selectedLocation, selectedZoomLvl, currentLocation, network } = this.props;\n        let zoomLvlToUse = selectedZoomLvl;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                <Map \n                    className={classes.mapContainer}\n                    center={selectedLocation} \n                    zoom= {zoomLvlToUse}\n                    maxZoom={zoomLvlToUse + 2} \n                    onmoveend={this.handleMoveEnd}\n                    ref={this.saveMap}>\n\n                    <TileLayer\n                    attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <ATMMarkerClusterGroup network={network}/>\n                    <Marker position={currentLocation} icon={icon}/>\n                    {/* {\n                        this.state.isMapInit && \n                            <ATMRouting map={this.map} from={currentLocation} to={selectedLocation}/>\n                    } */}\n                </Map>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMMapContainer));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Divider } from '@material-ui/core';\n\nconst styles = {\n    landingContainer: {\n        textAlign: 'center',\n        height: '100%',\n        color: '#ffffff',\n        background: '-webkit-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -webkit-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: '-o-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -o-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: '-moz-linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), -moz-linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        background: 'linear-gradient(110deg, #ff0000 0%, rgba(0, 0, 0, 0) 40%), linear-gradient(110deg, #34a344 60%, #004966 80%)',\n        overflow: 'auto'\n    },\n    subheader: {\n        fontFamily: 'Roboto Condensed, sans-serif',\n        fontWeight: 700,\n        lineHeight: 1.6,\n        fontSize: 24,\n        color: '#ffffff',\n        paddingTop: '25px',\n    },\n    divider: {\n        width: '300px',\n        height: '4px',\n        margin: '8px auto 0',\n        display: '#000000',\n        backgroundColor: '#ffffff'\n    },\n    paper: {\n        overflow: 'hidden'\n    }\n};\n\nclass ATM404Container extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n   \n\n    render() {\n        const { classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.landingContainer}>\n                    <Typography className={classes.subheader} variant=\"h6\" color=\"inherit\">\n                    Hong Kong ATM Locator\n                        <Divider className={classes.divider}/>\n                    </Typography>\n                    <br/>\n                    <Typography variant=\"h4\" color=\"inherit\">\n                        The page you are looking for was not found\n                    </Typography>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATM404Container.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      \n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATM404Container));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport ATMListingContainer from './ATMListingContainer';\nimport ATMMapContainer from './ATMMapContainer';\nimport { jetco, hangseng, hsbc } from '../../constants/networks';\nimport ATM404Container from '../ATM404Container/ATM404Container';\n\nconst styles = {\n    \n};\n\nclass ATMLandingContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        }\n    }\n\n    render() {\n        const { toggleMapView } = this.props;\n        const { params: { network } } = this.props.match;\n        \n        if(network != jetco.idx && network != hangseng.idx && network != hsbc.idx ) {\n            return (\n                <ATM404Container/>\n            )\n        }\n        \n        return (\n            <React.Fragment>\n               <AppNavbar/>\n                { !toggleMapView && <ATMListingContainer network={network}/>}\n                { toggleMapView && <ATMMapContainer network={network}/>}\n            </React.Fragment>\n        );\n    }\n}\n\nATMLandingContainer.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n       toggleMapView: state.page.toggle_map_view\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      \n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMLandingContainer));","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMItemDetail from '../../components/ATMDetail/ATMItemDetail';\nimport ATM404Container from '../ATM404Container/ATM404Container';\nimport { loadAllData } from '../../utils/dataLoader';\nimport { jetco, hangseng, hsbc } from '../../constants/networks';\n\nconst styles = {\n    \n};\n\nclass ATMDetailContainer extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            atm: null,\n            network: null,\n            pageFound: false\n        }\n    }\n\n    componentDidMount() {\n        const { params: { network, id }, location } = this.props.match;\n        const atm = null;\n\n        if(network != jetco.idx && network != hangseng.idx && network != hsbc.idx ) {\n            this.setState({\n                pageFound: false,\n            })\n        } else {\n            if(location && location.state && location.state.atm) {\n                atm = location.state.atm\n            }\n    \n            if(atm) {\n                // from ATM Listing\n                this.setState({\n                    pageFound: true,\n                    atm,\n                    network\n                })\n            } else {\n                // from URL direct access\n    \n                // TODO: optimize loading data using ID range\n                const ATMs = loadAllData();\n    \n                let filteredATMs = ATMs.filter(o => {\n                    return o.ATMId == id\n                });\n    \n                if(filteredATMs && filteredATMs[0]) {\n                    this.setState({\n                        atm: filteredATMs[0],\n                        pageFound: true,\n                        network\n                    });\n                } else {\n                    this.setState({\n                        pageFound: false\n                    });\n                }\n            }\n        }\n    }\n\n    render() {\n        const { atm, network, pageFound } = this.state;\n\n        if(!pageFound) {\n            return (\n                <ATM404Container/>\n            );\n        }\n        \n        return (\n            <React.Fragment>\n               <ATMItemDetail atm={atm} network={network}/>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContainer.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      \n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMDetailContainer));","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ATMNetworkContainer from './containers/Landing/ATMNetworkContainer';\nimport ATMLandingContainer from './containers/Landing/ATMLandingContainer';\nimport ATMDetailContainer from './containers/ATMDetailContainer/ATMDetailContainer';\nimport ATM404Container from './containers/ATM404Container/ATM404Container';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <Switch>\n                <Route exact path='/hk-atm-locator/' component={ATMNetworkContainer}/>\n                <Route exact path='/hk-atm-locator/atm/:network/' component={ATMLandingContainer}/>\n                <Route path='/hk-atm-locator/atm/:network/:id' component={ATMDetailContainer}/>\n                <Route component={ATM404Container} />\n            </Switch>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA, TOGGLE_FILTER_OPTION\n} from '../actions/types';\nimport {\n  SERVICES, WEEK_DAYS\n} from '../constants/services';\n\nconst atmDataReducer = (state={\n  filters: {},\n  data: [],\n}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data, raw_data: action.data};\n        case TOGGLE_FILTER_OPTION:\n            const filters = {...state.filters, [action.key]: action.value };\n            return {...state, filters, data: filterData(state.raw_data, filters)};\n        default:\n            return state;\n    }\n}\n\n\nconst filterData = (atms, filter) => {\n  return atms.filter( atm => {\n    const shouldFilter = true;\n    for (const key of Object.keys(filter)) {\n      const value = filter[key];\n      if (\n        (SERVICES.includes(key) && value === true && !atm.isServiceAvaliable(key))\n        || (key === 'bank' && value !== 'all' && value !== atm.Bank)\n        || (key === 'network' && value !== 'all' && value !== atm.Network)\n        || (WEEK_DAYS.includes(key) && value === true && atm.OpeningHours.map( oh => oh.OpenDayDescription ).includes(key))\n        || (key === 'Opening' && value === true && atm.isOpenNow() === false) // DISCUSSION: this will show also the unknown atm as well\n        || (key === 'Closed' && value === true && atm.isOpenNow() === true)) {\n          return false\n        }\n    }\n    return shouldFilter;\n  })\n}\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={\n    selectedLocation: {\n        lat: 22.308,\n        lng: 114.1716\n    },\n    currentLocation: {\n        lat: 22.308,\n        lng: 114.1716\n    }\n}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng, idx: action.idx }, selectedZoomLvl : (action.zoomLvl === -1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import {\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_ATM_FILTER_DIALOG,\n    TOGGLE_ABOUT_DIALOG,\n    TOGGLE_MAP_VIEW\n} from '../actions/types';\n\nconst pageReducer = (state={toggle_map_view: false}, action) => {\n    switch (action.type) {\n        case TOGGLE_ATM_DETAIL_DIALOG:\n            return {...state, detail_dialog_open: action.open};\n        case TOGGLE_ATM_FILTER_DIALOG:\n            return {...state, filter_dialog_open: action.open};\n        case TOGGLE_MAP_VIEW:\n            return {...state, toggle_map_view: action.open};\n        case TOGGLE_ABOUT_DIALOG:\n            return {...state, about_dialog_open: action.open};\n        default:\n            return state;\n\n    }\n}\n\nexport default pageReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer,\n    page: pageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\nimport './static/main.css';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}