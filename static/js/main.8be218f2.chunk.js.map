{"version":3,"sources":["static/images/you_are_here.png","containers/AppNavbar/AppNavbar.js","containers/App/App.js","utils/geoUtils.js","components/ATMFilter/ATMSearch.js","constants/banks.js","constants/networks.js","constants/services.js","actions/index.js","actions/types.js","components/ATMFilter/ATMFilterPanel.js","components/ATMListing/ATMItem.js","components/Leaflet/ATMMarker.js","components/ATMDetail/ATMDetailContent.js","components/ATMDetail/ATMItemDetail.js","components/ATMListing/ATMItemDialog.js","components/ATMListing/ATMListing.js","utils/mtrOperatingHoursUtils.js","models/atm.js","utils/dataLoader.js","containers/Landing/LandingListView.js","routes.js","containers/Root/Root.js","reducers/atmDataReducer.js","reducers/locationReducer.js","reducers/pageReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","withStyles","root","flexGrow","appBar","alignItems","props","classes","react_default","a","createElement","className","AppBar_default","position","color","Toolbar_default","Typography_default","variant","theme","createMuiTheme","typography","useNextVariants","App","WrappedComponent","_Component","AppHOC","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","MuiThemeProvider_default","AppNavbar_AppNavbar","location","style","marginTop","zIndex","Component","distanceBetweenTwoGeoPoints","lat1","lng1","lat2","lng2","dLat","Math","PI","dlng","sin","cos","atan2","sqrt","distanceConverter","distance","round","padding","display","width","borderBottomRightRadius","borderBottomLeftRadius","input","marginLeft","flex","iconButton","divider","height","margin","Paper_default","elevation","InputBase_default","placeholder","IconButton_default","aria-label","Search_default","Divider_default","Directions_default","hsbc","idx","en","zh","hangSeng","jetco","hangseng","networks","SERVICE_COIN_SORT","api_idx","tc","SERVICE_FOREIGN_CURRENCY","SERVICE_DISABLED_ACCESS","SERVICE_BILL_PAYMENT","SERVICE_CASH_WITHDRAWAL","SERVICE_CASH_DEPOSIT","SERVICE_CHEQUE_DEPOSIT","SERVICES","WEEK_DAYS","setSelectedLocation","lat","lng","zoomLvl","length","undefined","dispatch","type","dispatchSetSelectedLocation","setCurrentLocation","dispatchSetCurrentLocation","toggleATMDetailDialog","open","dispatchToggleATMDetailDialog","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","ATMFilterPanel","_this","call","handleChange","panel","event","setState","expanded","state","window","scrollTo","network","bank","toggleFilterOption","target","name","checked","_this$props","filters","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","handleSelectChange","bind","inputProps","id","MenuItem_default","map","index","_this$props2","_this2","services","component","FormLabel_default","FormGroup_default","service","FormControlLabel_default","control","Switch_default","handleCheckboxChange","label","_this3","days","day","_this4","option","collapsed","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","column","heading","ExpansionPanelDetails_default","details","renderNetworkSelect","renderBankSelect","renderServicesCheckbox","renderOpeningDayCheckbox","renderOpeningHourCheckbox","renderOpeningOrClosingCheckbox","connect","ownProps","atm","dispatchToggleFilterOption","ATMItem","alt","Bank","src","bankIcon","isOpenNow","Fragment","Chip_default","chip","isNaN","concat","_atm$ATMAddress","ATMAddress","LatitudeDescription","LongitudeDescription","ATMName","ListItem_default","button","onClick","atmListItemOnClick","renderBankIcon","ListItemText_default","primary","secondary","AddressLine","renderDistance","renderOpeningClosingTag","React","borderRadius","marginRight","withTheme","ATMMarker","data","Popup","CardContent_default","popUpContent","title","gutterBottom","pos","BranchName","HotlineNumber","latitude","longitude","Marker","renderMarkerClusterGroup","&:last-child","paddingBottom","ATMDetailContent","handleDialogClose","saveMap","isMapInit","renderDrawer","toolbar","Drawer_default","drawer","paper","drawerPaper","renderDrawerContent","renderNetworkIcon","renderServiceList","List_default","dense","denseList","renderOpeningHours","openingHours","oh","ohStr","OpenDayDescription","OpenTime","CloseTime","renderListItem","subheader","ListSubheader_default","subHeader","listRoot","_this$props$atm","ATMServices","_this$props$atm$ATMAd","CountryCode","TerritoryName","DistrictName","OpeningHours","inline","selectedLocation","currentLocation","zoom","selectedPosition","currentPosition","keys","_this$props3","selectedZoomLvl","icon","L","iconUrl","currentLocationIcon","shadowUrl","require","iconSize","zoomLvlToUse","content","Map","mapContainer","center","maxZoom","ref","TileLayer","attribution","url","Leaflet_ATMMarker","top","flexShrink","paddingTop","mixins","maxWidth","backgroundColor","palette","background","networkAvatar","deepOrange","ATMItemDetail","Close_default","ATMDetail_ATMDetailContent","Transition","Slide_default","assign","direction","ATMItemDialog","Dialog_default","fullScreen","onClose","TransitionComponent","ATMDetail_ATMItemDetail","page","ATMListing","handleDrawerToggle","mobileOpen","renderATMItems","allATMs","ATMListing_ATMItem","ATMListing_ATMItemDialog","CssBaseline_default","spacing","unit","getOperatingHoursByStation","station","isMatch","match","d","MTR_OPERATING_HOURS","filter","english_name","open_time","close_time","ATM","record","Network","CoinSortIndicator","ForeignCurrencyIndicator","DisabledAccessIndicator","BillPaymentIndicator","CashWithdrawalIndicator","CashDepositIndicator","ChequeDepositIndicator","RMBandForeignCurrencyATMIndicator","TalkATMIndicator","MTRStationOfficeIndicator","ChequeDepositMachineCutOffTime","copyFields","copyTo","copyFrom","_arr","_i","field","hasOwnProperty","isArray","serviceKey","isServiceIndicatorReturnTrue","dayOfWeek","moment","format","openingHour","find","openTime","closeTime","isBetween","HangSengATM","_ATM","banks","AutomatedTellerMachineOperatingHour","createGenericOpeningHours","operatingHoursFromMTRLookup","CashDepositMachineIndicator","ChequeDepositMachineIndicator","RMBATMwithoutForeignCurrencyIndicator","HsbcATM","_ATM2","weekday","loadAllData","toConsumableArray","atms","rawData","HANG_SENG_DATA","Brand","hangSengLatLngLUT","i","HANG_SENG_LATLNG_DATA","rec","address","latlng","push","loadHangSengData","HSBC_DATA","LandingListView","initATMData","detectCurrentLocation","me","navigator","geolocation","getCurrentPosition","coords","sortATMData","err","timeout","setATMData","sortedAllATMs","sort","x","y","ATMFilter_ATMSearch","ATMFilter_ATMFilterPanel","components_ATMListing_ATMListing","atmData","dispatchSetATMData","Routes","Route","path","Root","store","react_redux_es","BrowserRouter","routes_Routes","filterData","includes","isServiceAvaliable","atmDataReducer","action","objectSpread","raw_data","defineProperty","locationReducer","pageReducer","combineReducers","applyMiddleware","thunk","createStore","createStoreWithMiddleware","rootReducer","ReactDOM","render","Root_Root","document","getElementById"],"mappings":"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","file":"static/js/main.8be218f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/you_are_here.e985b822.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    alignItems: 'center',\n  }\n};\n\nfunction AppNavbar(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" color=\"secondary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Hong Kong ATM Locator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nAppNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AppNavbar);","import React, { Component } from 'react';\nimport AppNavbar from '../AppNavbar/AppNavbar';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = (WrappedComponent) => {\n  class AppHOC extends Component {\n    render() {\n      return (\n        <MuiThemeProvider theme={theme}>\n          <div>\n              <AppNavbar location={this.props.location}/>\n              <div style={{marginTop: '64px', zIndex: '1200'}}>\n                <WrappedComponent/>\n              </div>\n          </div>\n        </MuiThemeProvider>\n      );\n    }\n  }\n  return AppHOC;\n}\n\nexport default App;","const distanceBetweenTwoGeoPoints = (lat1, lng1, lat2, lng2) => {\n    const R = 6371;\n\tconst dLat = (lat2-lat1) * Math.PI / 180;\n\tconst dlng = (lng2-lng1) * Math.PI / 180;\n\tconst a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(lat1 * Math.PI / 180 ) * Math.cos(lat2 * Math.PI / 180 ) *\n\t\tMath.sin(dlng/2) * Math.sin(dlng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const d = R * c;\n\treturn d;\n}\n\nconst distanceConverter = (distance) => {\n\tif(!distance) {\n\t\treturn null;\n\t}\n\treturn distance > 1 ? Math.round(distance) + 'km' : Math.round(distance * 1000) + 'm';\n}\n\nexport {\n    distanceBetweenTwoGeoPoints,\n\tdistanceConverter\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    position: 'fixed',\n    alignItems: 'center',\n    width: '100%',\n    zIndex: 1200,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction ATMSearch(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <InputBase className={classes.input} placeholder=\"Search ...\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nATMSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ATMSearch);","export const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n}\n\nexport const hangSeng = {\n    idx: 'hangSeng',\n    en: 'Hang Seng Bank',\n    zh: ''\n}\n\nexport const bochk = {\n    idx: 'bochk',\n    en: 'Bank of China(Hong Kong) Limited',\n    zh: ''\n}\n\nexport const bankcomm = {\n    idx: 'bankcomm',\n    en: 'Bank of Communications (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cncbinternational = {\n    idx: 'cncbinternational',\n    en: 'China CITIC Bank International Limited',\n    zh: ''\n}\n\nexport const asiaccb = {\n    idx: 'asiaccb',\n    en: 'China Construction Bank (Asia) Corporation Limited',\n    zh: ''\n}\n\nexport const cmbchina = {\n    idx: 'cmbchina',\n    en: 'China Merchants Bank Hong Kong Branch',\n    zh: ''\n}\n\nexport const chiyubank = {\n    idx: 'chiyubank',\n    en: 'Chiyu Banking Corporation Limited',\n    zh: ''\n}\n\nexport const chonghingbank = {\n    idx: 'chonghingbank',\n    en: 'Chong Hing Bank Limited',\n    zh: ''\n}\n\nexport const citibank = {\n    idx: 'citibank',\n    en: 'Citibank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const cmbwinglungbank = {\n    idx: 'cmbwinglungbank',\n    en: 'CMB Wing Lung Bank Limited',\n    zh: ''\n}\n\nexport const dahsing = {\n    idx: 'dahsing',\n    en: 'Dah Sing Bank, Limited',\n    zh: ''\n}\n\nexport const dbs = {\n    idx: 'dbs',\n    en: 'DBS Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const fubonbank = {\n    idx: 'fubonbank',\n    en: 'Fubon Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const icbcasia = {\n    idx: 'icbcasia',\n    en: 'Industrial and Commercial Bank of China (Asia) Limited',\n    zh: ''\n}\n\nexport const ocbcwhhk = {\n    idx: 'ocbcwhhk',\n    en: 'OCBC Wing Hang Bank',\n    zh: ''\n}\n\nexport const publicbank = {\n    idx: 'publicbank',\n    en: 'Public Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const shacombank = {\n    idx: 'shacombank',\n    en: 'Shanghai Commercial Bank Limited',\n    zh: ''\n}\n\nexport const nanyang = {\n    idx: 'shacombank',\n    en: 'Nanyang Commercial Bank Limited',\n    zh: ''\n}\n\nexport const standardchartered = {\n    idx: 'standardchartered',\n    en: 'Standard Chartered Bank (Hong Kong) Limited',\n    zh: ''\n}\n\nexport const hkbea = {\n    idx: 'hkbea',\n    en: 'The Bank of East Asia',\n    zh: ''\n}\n\nexport const jetco = [\n    bochk,\n    bankcomm,\n    cncbinternational,\n    asiaccb,\n    cmbchina,\n    chiyubank,\n    chonghingbank,\n    citibank,\n    cmbwinglungbank,\n    dahsing,\n    dbs,\n    fubonbank,\n    icbcasia,\n    ocbcwhhk,\n    nanyang,\n    publicbank,\n    shacombank,\n    standardchartered,\n    hkbea\n]","export const jetco = {\n    idx: 'jetco',\n    en: 'Jetco',\n    zh: ''\n};\n\nexport const hangseng = {\n    idx: 'hangseng',\n    en: 'Hang Seng',\n    zh: ''\n};\n\nexport const hsbc = {\n    idx: 'hsbc',\n    en: 'HSBC',\n    zh: ''\n};\n\nexport const networks = [\n    jetco,\n    hangseng,\n    hsbc\n]","export const SERVICE_COIN_SORT = {\n  idx: 'coin_sort',\n  api_idx: 'CoinSortIndicator',\n  en: 'Coin Sort',\n  tc: ''\n};\n\nexport const SERVICE_FOREIGN_CURRENCY = {\n  idx: 'foreign_currency',\n  api_idx: 'ForeignCurrencyIndicator',\n  en: 'Foreign Currency',\n  tc: ''\n};\n\nexport const SERVICE_DISABLED_ACCESS = {\n  idx: 'disabled_access',\n  api_idx: 'DisabledAccessIndicator',\n  en: 'Disabled Access',\n  tc: ''\n};\n\nexport const SERVICE_BILL_PAYMENT = {\n  idx: 'bill_payment',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Bill Payment',\n  tc: ''\n};\n\nexport const SERVICE_CASH_WITHDRAWAL = {\n  idx: 'cash_withdrawal',\n  api_idx: 'CashWithdrawalIndicator',\n  en: 'Cash Withdrawal',\n  tc: ''\n};\n\nexport const SERVICE_CASH_DEPOSIT = {\n  idx: 'cash_deposit',\n  api_idx: 'BillPaymentIndicator',\n  en: 'Cash Deposit',\n  tc: ''\n};\n\nexport const SERVICE_CHEQUE_DEPOSIT = {\n  idx: 'cheque_deposit',\n  api_idx: 'ChequeDepositIndicator',\n  en: 'Cheque Deposit',\n  tc: ''\n};\n\nexport const SERVICES = [\n  SERVICE_COIN_SORT,\n  SERVICE_FOREIGN_CURRENCY,\n  SERVICE_DISABLED_ACCESS,\n  SERVICE_BILL_PAYMENT,\n  SERVICE_CASH_WITHDRAWAL,\n  SERVICE_CASH_DEPOSIT,\n  SERVICE_CHEQUE_DEPOSIT\n];\n\nexport const WEEK_DAYS = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];","import {\n    SET_ATM_DATA,\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION,\n    TOGGLE_ATM_DETAIL_DIALOG,\n    TOGGLE_FILTER_OPTION,\n} from './types';\n\nconst dispatchSetATMData = (data) => {\n    return {type: SET_ATM_DATA, data: data};\n}\n\nconst dispatchSetSelectedLocation = (lat, lng, idx, zoomLvl) => {\n    return {type: SET_SELECTED_LOCATION, lat: lat, lng: lng, idx: idx, zoomLvl:zoomLvl}\n}\n\nconst dispatchSetCurrentLocation = (lat, lng) => {\n    return {type: SET_CURRENT_LOCATION, lat: lat, lng: lng}\n}\n\nconst dispatchToggleATMDetailDialog = (open) => {\n    return {type: TOGGLE_ATM_DETAIL_DIALOG, open: open}\n}\n\nconst dispatchToggleFilterOption = (key, value) => {\n  return {type: TOGGLE_FILTER_OPTION, key, value}\n}\n\nexport const setATMData = (data) => {\n    return dispatch => {\n        dispatch(dispatchSetATMData(data));\n    }\n}\n\nexport const setSelectedLocation = (lat, lng, idx, zoomLvl=-1) => {\n    return dispatch => {\n        dispatch(dispatchSetSelectedLocation(lat, lng, idx, zoomLvl));\n    }\n}\n\nexport const setCurrentLocation = (lat, lng) => {\n    return dispatch => {\n        dispatch(dispatchSetCurrentLocation(lat, lng));\n    }\n}\n\nexport const toggleATMDetailDialog = (open) => {\n    return dispatch => {\n        dispatch(dispatchToggleATMDetailDialog(open))\n    }\n}\n\nexport const toggleFilterOption = (key, value) => {\n  return dispatch => {\n    dispatch(dispatchToggleFilterOption(key, value));\n  }\n}","export const SET_ATM_DATA = 'SET_ATM_DATA';\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION';\nexport const SET_CURRENT_LOCATION = 'SET_CURRENT_LOCATION';\nexport const TOGGLE_ATM_DETAIL_DIALOG = 'TOGGLE_ATM_DETAIL_DIALOG';\nexport const TOGGLE_FILTER_OPTION = 'TOGGLE_FILTER_OPTION';","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { jetco } from '../../constants/banks';\nimport { networks } from '../../constants/networks';\nimport { connect } from 'react-redux';\nimport { SERVICES, WEEK_DAYS } from '../../constants/services';\n\n\nimport {\n  toggleFilterOption\n} from '../../actions'\n\n\nconst styles = {\n    root: {\n        width: '100%',\n        zIndex: '1200',\n        display: 'inline-grid',\n        marginTop: '48px',\n      },\n      // TODO: fix\n      // expanded: {\n      //   position: 'inherit'\n      // },\n      // collapsed: {\n      //   position: 'fixed'\n      // }\n};\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nclass ATMFilterPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        network: 'all',\n        bank: 'all',\n        expanded: false\n    }\n  }\n\n  handleSelectChange(event) {\n      // this.setState({ [event.target.name]: event.target.value });\n      this.props.toggleFilterOption(event.target.name, event.target.value);\n  };\n\n  handleCheckboxChange(name) {\n      return function(event){\n          // this.setState({ [name]: event.target.checked });\n          this.props.toggleFilterOption(name, event.target.checked);\n      }\n  };\n\n  renderNetworkSelect() {\n    const { classes, filters: { network }} = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"network-select\">Network</InputLabel>\n          <Select\n              value={network === undefined ? 'all' : network}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'network',\n              id: 'network-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n              {\n                networks.map((network, index) => {\n                  return (\n                    <MenuItem value={network.idx} key={index}>\n                      {network.en}\n                    </MenuItem>\n                  );\n                })\n              }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderBankSelect() {\n    /*\n      TODO: the value s restricted based on Network\n    */\n    const { classes, filters: { bank } } = this.props;\n    return (\n      <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"bank-select\">Bank</InputLabel>\n          <Select\n              value={bank === undefined ? 'all' : bank}\n              onChange={this.handleSelectChange.bind(this)}\n              inputProps={{\n              name: 'bank',\n              id: 'bank-select',\n              }}\n              MenuProps={MenuProps}\n          >\n            <MenuItem value='all'>All</MenuItem>\n            {\n              jetco.map((bank, index) => {\n                return (\n                  <MenuItem value={bank.idx} key={index}>\n                    {bank.en}\n                  </MenuItem>\n                );\n              })\n            }\n          </Select>\n        </FormControl>\n    );\n  }\n\n  renderServicesCheckbox() {\n    const services = SERVICES;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Services</FormLabel>\n        <FormGroup>\n           {\n             services.map((service, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[service]}\n                      onChange={this.handleCheckboxChange(service).bind(this)}\n                      value={service.en}\n                    />\n                  }\n                  label={service.en}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningDayCheckbox() {\n    const days = WEEK_DAYS;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\">Opening Days</FormLabel>\n        <FormGroup>\n           {\n             days.map((day, index) => {\n               return (\n                  <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state[day]}\n                      onChange={this.handleCheckboxChange(day).bind(this)}\n                      value={day}\n                    />\n                  }\n                  label={day}\n                  key={index}\n                />\n               );\n             })\n           }\n        </FormGroup>\n      </FormControl>\n    );\n  }\n\n  renderOpeningHourCheckbox() {\n    return (\n      <div></div>\n      /*\n        TODO:\n      */\n    );\n  }\n\n  renderOpeningOrClosingCheckbox() {\n    const options = ['Opening', 'Closed'];\n    return (\n      <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">Current Status</FormLabel>\n      <FormGroup>\n         {\n           options.map((option, index) => {\n             return (\n                <FormControlLabel\n                control={\n                  <Switch\n                    checked={this.state[option]}\n                    onChange={this.handleCheckboxChange(option).bind(this)}\n                    value={option}\n                  />\n                }\n                label={option}\n                key={index}\n              />\n             );\n           })\n         }\n      </FormGroup>\n    </FormControl>\n    );\n  }\n\n  handleChange = panel => (event) => {\n    this.setState({\n      expanded: !this.state.expanded\n    });\n    window.scrollTo(0, 0);\n  };\n\n  render() {\n    const { classes } = this.props;\n     const { expanded } = this.state;\n    /*\n      TODO: Add Grid for responsive design\n    */\n    return (\n        <div className={ classes.root + ' ' + (expanded ? classes.expanded : classes.collapsed)}>\n            <ExpansionPanel\n              expanded={expanded || false}\n              onChange={this.handleChange()}\n            >\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <div className={classes.column}>\n                <Typography className={classes.heading}>Filter</Typography>\n                </div>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n                { this.renderNetworkSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderBankSelect() }\n                <Divider variant=\"middle\" />\n                { this.renderServicesCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningDayCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningHourCheckbox() }\n                <Divider variant=\"middle\" />\n                { this.renderOpeningOrClosingCheckbox() }\n                <Divider variant=\"middle\" />\n            </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n      );\n  }\n}\n\nATMFilterPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst\nmapStateToProps = (state, ownProps) => {\n    return {\n      filters: state.atm.filters\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleFilterOption: (key, value) => {\n            dispatch(toggleFilterOption(key, value));\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ATMFilterPanel));","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceConverter } from '../../utils/geoUtils';\n\nimport {\n    setSelectedLocation,\n    toggleATMDetailDialog\n} from '../../actions'\n\nconst styles = theme => ({\n    chip: {\n        borderRadius: 0,\n        width: '100px',\n    },\n    bankIcon: {\n      width: '50px',\n      height: '50px',\n      marginRight: '20px',\n    }\n});\n\nclass ATMItem extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    renderBankIcon(atm) {\n      const { classes } = this.props;\n      return (\n        <img alt={atm.Bank} src={atm.Bank + \".png\"} className={classes.bankIcon}></img>\n      )\n    }\n\n    renderOpeningClosingTag(atm) {\n        const isOpenNow = atm.isOpenNow();\n        if (isOpenNow === null) {\n          return (null);\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <Chip\n                    label={ isOpenNow ? 'Opening' : 'Closed' }\n                    color={ isOpenNow ? 'primary' : 'secondary' }\n                    className={classes.chip}\n                />\n            </React.Fragment>\n        )\n    }\n\n    renderDistance(distance) {\n        if(isNaN(distance)) {\n            return (null);\n        }\n\n        distance = distanceConverter(distance);\n        return (\n            <React.Fragment>\n                { `${distance} from your current location` }\n            </React.Fragment>\n        )\n    }\n\n    atmListItemOnClick(atm, idx) {\n        const { ATMAddress: { LatitudeDescription, LongitudeDescription} } = atm;\n        if(LatitudeDescription && LongitudeDescription){\n            this.props.setSelectedLocation(LatitudeDescription, LongitudeDescription, idx);\n        }\n\n        // toggle detail page\n        this.props.toggleATMDetailDialog(true);\n    }\n\n    render() {\n        const { idx, atm } = this.props;\n        const { ATMName, ATMAddress, distance } = atm;\n\n        return (\n            <React.Fragment>\n                <ListItem button key={ idx } onClick={() => this.atmListItemOnClick(atm, idx)}>\n                    { this.renderBankIcon(atm) }\n                    <div>\n                      <ListItemText\n                          primary={ ATMName }\n                          secondary={\n                              <React.Fragment>\n                                  { ATMAddress.AddressLine }\n                                  <br/>\n                                  { this.renderDistance(distance) }\n\n                              </React.Fragment>\n                          }\n                      />\n                      <div style={{display: 'flex'}}>\n                      { this.renderOpeningClosingTag(atm) }\n                      </div>\n\n\n                    </div>\n                </ListItem>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItem.propTypes = {\n    idx: PropTypes.number.isRequired,\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setSelectedLocation: (lat, lng, idx) => {\n            dispatch(setSelectedLocation(lat, lng, idx))\n        },\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItem));\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Marker, Popup } from 'react-leaflet';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = theme => ({\n    popUpContent: {\n        padding: 0,\n        '&:last-child': {\n            paddingBottom: 0\n        }\n    },\n});\n\nclass ATMMarker extends React.Component {\n\n    renderPopUp(data) {\n        const { classes } = this.props;\n        return (\n            <Popup>\n                <CardContent className={classes.popUpContent}>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        { data.ATMName }\n                    </Typography>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        { data.ATMAddress.AddressLine }\n                    </Typography>\n                    <Typography className={classes.pos} color=\"textSecondary\">\n                        { data.BranchName }\n                    </Typography>\n                    <Typography component=\"p\">\n                        { data.HotlineNumber }\n                    </Typography>\n                </CardContent>\n            </Popup>\n        );\n    }\n\n    renderMarkerClusterGroup() {\n        const { atm } = this.props;\n\n        const latitude = atm.ATMAddress.LatitudeDescription;\n        const longitude = atm.ATMAddress.LongitudeDescription;\n        return (\n            <Marker\n                position= { [latitude, longitude] }\n                // onMouseOver= { (e) => {\n                //     e.target.openPopup();\n                // }}\n                // onMouseOut= { (e) => {\n                //     // e.target.closePopup();\n                // }}\n            >\n            {/* { this.renderPopUp(atm) } */}\n            </Marker>\n        );\n    }\n\n    render() {\n        return this.renderMarkerClusterGroup();\n    }\n}\n\nATMMarker.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMMarker));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport L from 'leaflet';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\nimport ATMMarker from '../../components/Leaflet/ATMMarker';\nimport currentLocationIcon from '../../static/images/you_are_here.png';\nimport { distanceConverter } from '../../utils/geoUtils';\nimport { SERVICES } from '../../constants/services';\nimport {\n    toggleATMDetailDialog,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions';\n\nconst drawerWidth = 400\n\nconst styles = theme => ({\n    mapContainer: {\n        position: 'absolute',\n        top: '64px',\n        width: 'calc(100% - 400px)',\n        height: '100%',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        paddingTop: '64px'\n    },\n    content: {\n        flexGrow: 1,\n    },\n    toolbar: theme.mixins.toolbar,\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundColor: theme.palette.background.paper,\n     },\n     subHeader: {\n        height: '28px'\n     },\n     networkAvatar: {\n        width: '60px',\n        height: '60px',\n        color: '#fff',\n        backgroundColor: deepOrange[500],\n     },\n     bankIcon: {\n      width: '50px',\n      height: '50px',\n    },\n    denseList: {\n        paddingTop: '4px',\n        paddingBottom: '4px'\n    }\n});\n\nclass ATMDetailContent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 16,\n            isMapInit: false\n        }\n    }\n\n    componentDidMount() {\n        const { selectedLocation, currentLocation } = this.props;\n        let selectedPosition = [this.state.selectedLocation.lat, this.state.selectedLocation.lng];\n        let currentPosition =  [this.state.currentLocation.lat, this.state.currentLocation.lng];\n\n        if(selectedLocation != null && Object.keys(selectedLocation).length === 2 && selectedLocation.lat && selectedLocation.lng) {\n            selectedPosition = [selectedLocation.lat, selectedLocation.lng];\n            this.setState({selectedLocation: selectedPosition})\n        }\n\n        if(currentLocation != null && Object.keys(currentLocation).length === 2 && currentLocation.lat && currentLocation.lng) {\n            currentPosition = [currentLocation.lat, currentLocation.lng];\n            this.setState({currentLocation: currentPosition})\n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    saveMap = (map) => {\n        this.map = map;\n        this.setState({\n            isMapInit: true\n        })\n    }\n\n    renderDrawer = () => {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <div className={classes.toolbar} />\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                    paper: classes.drawerPaper,\n                    }}\n                >\n                    { this.renderDrawerContent() }\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n\n    renderNetworkIcon = (bank) => {\n        const { classes } = this.props;\n        return (\n            <img alt={bank} src={bank + \".png\"} className={classes.bankIcon}></img>\n        );\n    }\n\n    // TODO: revise UI\n    renderServiceList = (services) => {\n        const { classes } = this.props;\n        // const { BillPaymentIndicator, CashDepositIndicator, CashWithdrawalIndicator, ChequeDepositIndicator, CoinSortIndicator, DisabledAccessIndicator, ForeignCurrencyIndicator } = services;\n        return (\n            <List \n                dense={true}\n            >\n                {\n                    SERVICES.map((service, idx) => {\n                        if(services[service.api_idx]) {\n                            return (\n                                <ListItem className={classes.denseList} key={idx}>\n                                    <ListItemText primary={service.en}></ListItemText>\n                                </ListItem>\n                            );\n                        }\n                        return (\n                            (null)\n                        );\n                    })\n                }\n            </List>\n        );\n    }\n\n    // TODO: revise UI\n    renderOpeningHours = (openingHours) => {\n        const { classes } = this.props;\n        return (\n             <List \n                dense={true}\n            >\n                {\n                    openingHours.map((oh, idx) => {\n                       const ohStr = `${oh.OpenDayDescription } : ${oh.OpenTime} - ${oh.CloseTime}`;\n                       return (\n                           <ListItem className={classes.denseList} key={idx}>\n                                <ListItemText primary={ohStr}></ListItemText>\n                            </ListItem>\n                       );\n                    })\n                }\n            </List>\n        )\n    }\n\n    renderListItem = (subheader, value) => {\n        const { classes } = this.props;\n\n        if(!subheader && !value) {\n            return (null);\n        }\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={classes.subHeader}>{subheader}</ListSubheader>}\n                className={classes.listRoot}\n                dense={true}\n                >\n                <ListItem>\n                    <ListItemText primary={value}/>\n                </ListItem>\n            </List>\n        );\n    }\n\n    renderDrawerContent = () => {\n        const { atm: { ATMName, ATMServices, ATMAddress: { CountryCode, TerritoryName, DistrictName, AddressLine, LatitudeDescription, LongitudeDescription }, Bank, HotlineNumber, distance, OpeningHours}, classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <List className={classes.listRoot}>\n                    <ListItem alignItems=\"flex-start\">\n                        { this.renderNetworkIcon(Bank) }\n                        <ListItemText\n                        primary={ ATMName }\n                        secondary={\n                            <React.Fragment>\n                            <Typography component=\"span\" className={classes.inline} color=\"textPrimary\">\n                                ({ LatitudeDescription },{ LongitudeDescription })\n                            </Typography>\n                            </React.Fragment>\n                        }\n                        />\n                    </ListItem>\n                </List>\n\n                { this.renderListItem('District', CountryCode + ' > ' + TerritoryName + ' > ' + DistrictName) }\n                { this.renderListItem('Address', AddressLine) }\n                { this.renderListItem('Services', this.renderServiceList(ATMServices)) }\n                { this.renderListItem('Opening Hours', this.renderOpeningHours(OpeningHours)) }\n                { this.renderListItem('Hotline Number', HotlineNumber) }\n                { this.renderListItem('Distance', distanceConverter(distance)) }\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        const { atm, classes, selectedLocation, selectedZoomLvl, currentLocation } = this.props;\n        let icon = L.icon({\n            iconUrl: currentLocationIcon,\n            shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n            iconSize: [70, 70]\n       })\n\n       let zoomLvlToUse = selectedZoomLvl;\n        if (!zoomLvlToUse || zoomLvlToUse<0) zoomLvlToUse=this.state.zoom;\n\n        return (\n            <React.Fragment>\n                { this.renderDrawer() }\n                <div className={classes.content}>\n                    <Map\n                        className={classes.mapContainer}\n                        center={selectedLocation}\n                        zoom= {zoomLvlToUse}\n                        maxZoom={18}\n                        // dragging={false}\n                        ref={this.saveMap}>\n\n                        <TileLayer\n                        attribution='&amp;copy <a href=\"http:osm.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https:{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        {/* <ATMMarkerClusterGroup/> */}\n                        <Marker position={currentLocation} icon={icon}/>\n                        <ATMMarker atm={atm}/>\n                    </Map>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMDetailContent.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMDetailContent));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMDetailContent from './ATMDetailContent';\nimport {\n    toggleATMDetailDialog\n} from '../../actions';\n\n\nconst styles = theme => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    root: {\n        display: 'flex',\n    }\n});\n\nclass ATMItemDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n           \n        }\n    }\n\n    handleDialogClose = () => {\n        this.props.toggleATMDetailDialog(false);\n    };\n\n    render() {\n        const { atm, classes } = this.props;\n        \n        return (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <AppBar className={classes.appBar} position=\"fixed\" color=\"secondary\">\n                    <Toolbar>\n                        <IconButton  onClick={this.handleDialogClose} aria-label=\"Close\">\n                        <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                            {atm.ATMName}\n                        </Typography>\n                    </Toolbar>\n                    </AppBar>\n                    <ATMDetailContent atm={atm} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nATMItemDetail.propTypes = {\n    atm: PropTypes.object.isRequired,\n    classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        \n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleATMDetailDialog: (open) => {\n            dispatch(toggleATMDetailDialog(open))\n        }\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDetail));\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport ATMItemDetail from '../ATMDetail/ATMItemDetail';\n\nconst styles = {\n\n};\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\nclass ATMItemDialog extends React.Component {\n\n  render() {\n    const { atm } = this.props;\n    \n    {/* TODO: Investigate idx = -1. Prolly due to zoomLevel */}\n    if(!this.props.selectedLocation || !atm || this.props.selectedLocation.idx < 0) {\n      return (null);\n    }\n    \n    const idx = this.props.selectedLocation.idx;\n    return (\n      <Dialog\n        fullScreen\n        open={this.props.open || false}\n        onClose={this.handleDialogClose}\n        TransitionComponent={Transition}\n      >\n        <ATMItemDetail atm={atm[idx]}/>\n      </Dialog>\n    );\n  }\n}\n\nATMItemDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  atm: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n      atm: state.atm.data,\n      open: state.page.open,\n      selectedLocation: state.location.selectedLocation\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ATMItemDialog));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { withStyles } from '@material-ui/core/styles';\nimport ATMItem from './ATMItem';\nimport ATMItemDialog from './ATMItemDialog';\n\nconst drawerWidth = '100%';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative',\n    zIndex: '1000'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nclass ATMListing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        mobileOpen: false,\n    };\n  }\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderATMItems = () => {\n    const allATMs = this.props.atm;\n    if(allATMs === undefined) {\n      return <div>Loading</div>\n    }\n\n    if(allATMs.length > 0) {\n      return allATMs.map((atm, idx) => {\n        return (\n            <React.Fragment key={idx}>\n                <ATMItem atm={atm} idx={idx}/>\n                <Divider />\n            </React.Fragment>\n        );\n    });\n    } else {\n      return <div>No ATM data</div>\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const drawer = (\n      <React.Fragment>\n        <List>\n            {this.renderATMItems()}\n        </List>\n        <ATMItemDialog/>\n      </React.Fragment>\n    );\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <nav className={classes.drawer}>\n          {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n          <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n        </nav>\n    </div>\n    );\n  }\n}\n\nATMListing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    atm: state.atm.data\n  };\n}\n\nexport default connect(mapStateToProps)(withStyles(styles, { withTheme: true })(ATMListing));\n","import MTR_OPERATING_HOURS from '../data/ref_mtr_operating_hours.json';\n\nconst getOperatingHoursByStation = (station) => {\n    // Expected Input: \"MTR Tin Shui Wai Station\"\n    const isMatch = station.match('(MTR (.*?) Station)');\n    if(isMatch != null) {\n        station = isMatch[2] \n    }\n    \n    var d = MTR_OPERATING_HOURS.filter( (data) => {\n        return data.english_name == station\n    })\n\n    if(d.length > 0) {\n        d = d[0];\n        return {\n            'open_time': d.open_time,\n            'close_time': d.close_time\n        };\n    } \n\n    return null;\n}\n\nexport {\n    getOperatingHoursByStation\n}","import { isArray } from \"util\";\nimport {\n  SERVICE_BILL_PAYMENT, SERVICE_CASH_DEPOSIT, SERVICE_CASH_WITHDRAWAL, SERVICE_CHEQUE_DEPOSIT, SERVICE_COIN_SORT,\n  SERVICE_DISABLED_ACCESS, SERVICE_FOREIGN_CURRENCY,\n  WEEK_DAYS\n} from '../constants/services';\nimport { getOperatingHoursByStation } from '../utils/mtrOperatingHoursUtils';\nimport * as banks from '../constants/banks';\nimport * as networks from '../constants/networks';\nimport * as moment from 'moment';\n\nclass ATM {\n  Bank = \"\";\n  Network = \"\";\n  ATMName = \"\";\n  HotlineNumber = \"\";\n  ATMAddress = {\n    CountryCode: \"HK\",\n    TerritoryName: \"\",\n    DistrictName: \"\",\n    AddressLine: [],\n    LatitudeDescription: 0,\n    LongitudeDescription: 0,\n  };\n  ATMServices = {\n    CoinSortIndicator: false,\n    ForeignCurrencyIndicator: false,\n    DisabledAccessIndicator: false,\n    BillPaymentIndicator: false,\n    CashWithdrawalIndicator: false,\n    CashDepositIndicator: false,\n    ChequeDepositIndicator: false,\n    RMBandForeignCurrencyATMIndicator: false,\n    TalkATMIndicator: false,\n    MTRStationOfficeIndicator: false,\n    ChequeDepositMachineCutOffTime: \"\",\n  };\n  OpeningHours = [];\n\n  constructor(record) {\n    copyFields(this, record);\n  }\n\n  isServiceAvaliable(serviceKey) {\n    if (serviceKey === SERVICE_COIN_SORT) {\n       return this.isServiceIndicatorReturnTrue('CoinSortIndicator');\n    } else if (serviceKey === SERVICE_FOREIGN_CURRENCY) {\n      return this.isServiceIndicatorReturnTrue('ForeignCurrencyIndicator');\n    } else if (serviceKey === SERVICE_DISABLED_ACCESS) {\n      return this.isServiceIndicatorReturnTrue('DisabledAccessIndicator');\n    } else if (serviceKey === SERVICE_BILL_PAYMENT) {\n      return this.isServiceIndicatorReturnTrue('BillPaymentIndicator');\n    } else if (serviceKey === SERVICE_CASH_WITHDRAWAL) {\n      return this.isServiceIndicatorReturnTrue('CashWithdrawalIndicator');\n    } else if (serviceKey === SERVICE_CASH_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('CashDepositIndicator');\n    } else if (serviceKey === SERVICE_CHEQUE_DEPOSIT) {\n      return this.isServiceIndicatorReturnTrue('ChequeDepositIndicator');\n    }\n  }\n\n  isServiceIndicatorReturnTrue(field) {\n    return this.ATMServices\n      && this.ATMServices[field] !== undefined\n      && this.ATMServices[field] === true;\n  }\n\n  isOpenNow() {\n    const dayOfWeek = moment().format('dddd');\n    const openingHour = this.OpeningHours.find(oh => oh.OpenDayDescription === dayOfWeek);\n    if (!openingHour) {\n      return null;\n    }\n    const openTime = moment(openingHour.OpenTime, 'HH:mm');\n    const closeTime = moment(openingHour.CloseTime, 'HH:mm');\n    return moment().isBetween(openTime, closeTime);\n  }\n}\n\n\n\nfunction copyFields(copyTo, copyFrom) {\n  for (const field of Object.keys(copyTo)) {\n    if (copyFrom && copyFrom.hasOwnProperty(field)) {\n      if (typeof (copyFrom[field]) !== 'object' || isArray(copyFrom[field])) {\n        copyTo[field] = copyFrom[field];\n      } else {\n        copyFields(copyTo[field], copyFrom[field]);\n      }\n    }\n  }\n}\n\nexport class HangSengATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hangSeng.idx;\n    this.Network = networks.hangseng.idx;\n\n    if (record.ATMServices.AutomatedTellerMachineOperatingHour === '24-hours') {\n      this.OpeningHours = createGenericOpeningHours(\"00:00\", \"23:59\");\n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Around 06:00 - midnight 01:00 (Follows Station First/Last Trains Service Hours)') {\n      const operatingHoursFromMTRLookup = getOperatingHoursByStation(record.ATMName); \n      if(operatingHoursFromMTRLookup != null) {\n        const { open_time, close_time } = operatingHoursFromMTRLookup;\n        this.OpeningHours = createGenericOpeningHours(open_time, close_time);\n      } \n    } else if (record.ATMServices.AutomatedTellerMachineOperatingHour === 'Subject to Mall Opening Hours') {\n      // Just give a generic mall open/close time\n      this.OpeningHours = createGenericOpeningHours(\"10:00\", \"20:00\");\n    }\n\n    this.ATMServices.CashDepositIndicator = record.ATMServices.CashDepositMachineIndicator;\n    this.ATMServices.ChequeDepositIndicator = record.ATMServices.ChequeDepositMachineIndicator;\n    this.ATMServices.ForeignCurrencyIndicator =\n        record.ATMServices.RMBandForeignCurrencyATMIndicator\n        && !record.ATMServices.RMBATMwithoutForeignCurrencyIndicator;\n\n  }\n}\n\nexport class HsbcATM extends ATM {\n  constructor(record) {\n    super(record);\n    this.Bank = banks.hsbc.idx;\n    this.Network = networks.hsbc.idx;\n  }\n}\n\n\nfunction createGenericOpeningHours(openTime, closeTime) {\n  return WEEK_DAYS.map(weekday => ({\n    OpenDayDescription: weekday,\n    OpenTime: openTime,\n    CloseTime: closeTime\n  }));\n}","import HANG_SENG_DATA from '../data/hang_seng.json';\nimport HANG_SENG_LATLNG_DATA from '../data/hang_seng_latlng.json';\nimport HSBC_DATA from '../data/hsbc.json';\n\nimport { HangSengATM, HsbcATM } from './../models/atm';\n\nexport const loadAllData = () => {\n\n  return [...loadHangSengData(), ...loadHSBCData()]\n\n\n}\n\nfunction loadHSBCData() {\n  const hsbcATMs = HSBC_DATA.data[0].Brand[0].ATM;\n  return hsbcATMs.map(atm => new HsbcATM(atm));\n}\n\nfunction loadHangSengData() {\n  const atms = [];\n\n  const rawData = HANG_SENG_DATA.data[0].Brand[0].ATM;\n  let hangSengLatLngLUT = {};\n  for (let i = 0; i < HANG_SENG_LATLNG_DATA.length; i++) {\n    let rec = HANG_SENG_LATLNG_DATA[i];\n    hangSengLatLngLUT[rec.address] = { 'lat': rec.lat, 'lng': rec.lng };\n  }\n  for (let i = 0; i < rawData.length; i++) {\n    let rec = rawData[i];\n    let latlng = hangSengLatLngLUT[rec.ATMAddress.AddressLine[0]];\n    if (latlng) {\n      rec.ATMAddress.LatitudeDescription = latlng.lat;\n      rec.ATMAddress.LongitudeDescription = latlng.lng;\n    }\n\n    atms.push(new HangSengATM(rec));\n\n  }\n\n  return atms;\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport { distanceBetweenTwoGeoPoints } from '../../utils/geoUtils';\nimport ATMSearch from '../../components/ATMFilter/ATMSearch';\nimport ATMFilterPanel from '../../components/ATMFilter/ATMFilterPanel';\nimport ATMListing from '../../components/ATMListing/ATMListing';\nimport { loadAllData } from '../../utils/dataLoader';\n\n\nimport {\n    setATMData,\n    setCurrentLocation,\n    setSelectedLocation\n} from '../../actions'\n\nconst styles = {\n\n  };\n\nclass LandingListView extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            currentLocation: {\n                lat: 22.308,\n                lng: 114.1716\n            },\n            zoom: 14,\n            isMapInit: false\n        }\n        this.initATMData();\n        this.detectCurrentLocation();\n    }\n\n    detectCurrentLocation() {\n        const me = this;\n\n        if (\"geolocation\" in navigator) {\n            navigator.geolocation.getCurrentPosition(\n             function success(position) {\n                me.props.setCurrentLocation(position.coords.latitude, position.coords.longitude);\n                me.props.setSelectedLocation(position.coords.latitude, position.coords.longitude);\n                me.sortATMData();\n             }, (err) => {\n               // cannot get location, sort data anyway\n                me.sortATMData();\n             },{ timeout:2000 });\n        } else {\n            me.sortATMData();\n        }\n    }\n\n    initATMData() {\n\n        const allATMs = loadAllData();\n        this.props.setATMData(allATMs);\n    }\n\n    sortATMData() {\n        const { atm } = this.props;\n        const { currentLocation } = this.state;\n        let location = currentLocation;\n        if(atm) {\n            if(this.props.currentLocation !== undefined) {\n                location = this.props.currentLocation\n            }\n\n            const sortedAllATMs = [].concat(atm)\n             .sort( (x, y) => {\n                if(x.ATMAddress.LatitudeDescription != null && x.ATMAddress.LongitudeDescription != null &&\n                    y.ATMAddress.LatitudeDescription != null && y.ATMAddress.LongitudeDescription != null ) {\n                        const distanceX = distanceBetweenTwoGeoPoints(location.lat, location.lng, x.ATMAddress.LatitudeDescription, x.ATMAddress.LongitudeDescription);\n                        const distanceY = distanceBetweenTwoGeoPoints(location.lat, location.lng, y.ATMAddress.LatitudeDescription, y.ATMAddress.LongitudeDescription);\n                        return distanceX > distanceY ? 1 : -1;\n                    }\n                return -1;\n            })\n            .map( (atm) => {\n                atm.distance = distanceBetweenTwoGeoPoints(location.lat, location.lng, atm.ATMAddress.LatitudeDescription, atm.ATMAddress.LongitudeDescription);\n                return atm;\n            });\n\n            this.props.setATMData(sortedAllATMs);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ATMSearch/>\n                <ATMFilterPanel/>\n                <ATMListing/>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        atm: state.atm.data,\n        selectedLocation: state.location.selectedLocation,\n        selectedZoomLvl: state.location.selectedZoomLvl,\n        currentLocation: state.location.currentLocation\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setATMData: (atmData) => {\n            dispatch(setATMData(atmData));\n        },\n        setSelectedLocation: (lat, lng, zoomLvl=-1) => {\n            dispatch(setSelectedLocation(lat, lng, zoomLvl))\n        },\n        setCurrentLocation: (lat, lng) => {\n            dispatch(setCurrentLocation(lat, lng))\n        }\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LandingListView));","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport App from './containers/App/App';\nimport LandingListView from './containers/Landing/LandingListView';\n\nexport default class Routes extends Component{\n    render() {\n        return (\n            <div>\n                <Route path='/' component={App(LandingListView)}/>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport Routes from '../../routes';\nimport { BrowserRouter } from 'react-router-dom';\n\nexport default class Root extends Component {\n  render() {\n\t\tconst { store } = this.props;\n\t\t\n    return (\n\t\t<Provider store={store} >\n\t\t\t<BrowserRouter>\n\t\t\t\t<Routes/>\n\t\t\t</BrowserRouter>\n\t\t</Provider>\t  \n    )\n  }\n}\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n}","import {\n    SET_ATM_DATA, TOGGLE_FILTER_OPTION\n} from '../actions/types';\nimport {\n  SERVICES, WEEK_DAYS\n} from '../constants/services';\n\nconst atmDataReducer = (state={\n  filters: {},\n  data: [],\n}, action) => {\n    switch (action.type) {\n        case SET_ATM_DATA:\n            return {...state, data: action.data, raw_data: action.data};\n        case TOGGLE_FILTER_OPTION:\n            const filters = {...state.filters, [action.key]: action.value };\n            return {...state, filters, data: filterData(state.raw_data, filters)};\n        default:\n            return state;\n    }\n}\n\n\nconst filterData = (atms, filter) => {\n  return atms.filter( atm => {\n    const shouldFilter = true;\n    for (const key of Object.keys(filter)) {\n      const value = filter[key];\n      if (\n        (SERVICES.includes(key) && value === true && !atm.isServiceAvaliable(key))\n        || (key === 'bank' && value !== 'all' && value !== atm.Bank)\n        || (key === 'network' && value !== 'all' && value !== atm.Network)\n        || (WEEK_DAYS.includes(key) && value === true && atm.OpeningHours.map( oh => oh.OpenDayDescription ).includes(key))\n        || (key === 'Opening' && value === true && atm.isOpenNow() === false) // DISCUSSION: this will show also the unknown atm as well\n        || (key === 'Closed' && value === true && atm.isOpenNow() === true)) {\n          return false\n        }\n    }\n    return shouldFilter;\n  })\n}\nexport default atmDataReducer;","import {\n    SET_SELECTED_LOCATION,\n    SET_CURRENT_LOCATION\n} from '../actions/types';\n\nconst locationReducer = (state={}, action) => {\n    switch (action.type) {\n        case SET_SELECTED_LOCATION:\n            return { ...state, selectedLocation : { lat: action.lat, lng: action.lng, idx: action.idx }, selectedZoomLvl : (action.zoomLvl === -1? state.selectedZoomLvl : action.zoomLvl) };\n        case SET_CURRENT_LOCATION:\n            return { ...state, currentLocation: { lat: action.lat, lng: action.lng } };\n        default:\n            return state;\n    }\n}\n\nexport default locationReducer;","import {\n    TOGGLE_ATM_DETAIL_DIALOG\n} from '../actions/types';\n\nconst pageReducer = (state={}, action) => {\n    switch (action.type) {\n        case TOGGLE_ATM_DETAIL_DIALOG:\n            return {...state, open: action.open};\n        default:\n            return state;\n    }\n}\n\nexport default pageReducer;","import { combineReducers } from 'redux';\nimport atmDataReducer from './atmDataReducer';\nimport locationReducer from './locationReducer';\nimport pageReducer from './pageReducer';\n\nexport default combineReducers({\n    atm: atmDataReducer,\n    location: locationReducer,\n    page: pageReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport Root from './containers/Root/Root';\nimport rootReducer from './reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nconst store = createStoreWithMiddleware(rootReducer);\n\nReactDOM.render(< Root store = {\n    store\n}/>, document.getElementById('root'))"],"sourceRoot":""}